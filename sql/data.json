{
  "1": {
    "questionNum": "NC15185",
    "questionTitle": "简单题\n            ",
    "difficulty": "3849",
    "content": {
      "题目描述：": "Etéreo 是个爱学习的好孩子。在年假期间，他依然热情于数学。他最近发现了一个高大上的东西： 他觉得这里的 非常的厉害！然后他又告诉你： 他会告诉你 和 ，想请你告诉他 的值。当然这是一个小数，所以请你在小数点后保留 位。 Etéreo 是个“问题小子”，有很多询问，请你一一回答。 注意，题中 都是实数。",
      "输入描述：": "第一行一个整数 ，表示Etéreo 的询问个数。接下去 行，每行三个整数 ，表示一个询问，意义同题目描述。",
      "输出描述：": "输出共 行，每行一个小数，表示答案 。"
    },
    "PositiveTags": "数学",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "2\n5 196 1\n3 60 4",
    "Output": "29089.0\n1205.1322"
  },
  "2": {
    "questionNum": "NC15186",
    "questionTitle": "简单题2\n            ",
    "difficulty": "2222",
    "content": {
      "题目描述：": "Etéreo最近又发现了一个高大上的东西： 他觉得这里的 同样非常的厉害！然后他又告诉你：他会告诉你 和 ，想请你告诉他 的值。当然这是一个小数，所以请你在小数点后保留 位。 Etéreo 是个“问题小子”，有很多询问，请你一一回答。 注意，题中 都是实数。",
      "输入描述：": "第一行一个整数 ，表示 Etéreo 的询问个数。接下去 行，每行三个整数 ，表示一个询问，意义同题目描述。",
      "输出描述：": "输出共 行，每行一个小数，表示答案 。"
    },
    "PositiveTags": "数学",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "2\n147 3 2\n80 6 4",
    "Output": "259572.14\n24830.3979"
  },
  "3": {
    "questionNum": "NC15187",
    "questionTitle": "分元宵\n            ",
    "difficulty": "1284",
    "content": {
      "题目描述：": "毕竟是元宵节，晚上还是要吃几个元宵。 Etéreo 家可是个大家庭，元宵的数量，甚至是餐具的数量，都多的惊人。现在，爱数学的 Etéreo 又来问你有趣的数学题了，快来秒掉它！ Etéreo 家里有 种元宵馅， 种元宵皮，每个元宵可以选择任意一种元宵馅和任意一种元宵皮。同时有 张桌子，每张桌子上放了 只碗，每只碗能放一只元宵。每只碗都要装一只元宵。Etéreo 会告诉你 的值，想请问你有多少种装元宵的方式。答案对 取模。 两种方式被认为是不同的当且仅当至少有一只碗存在于两种方式的同一个位置但是里面有至少一个元宵不同。 两个元宵被认为是不同的当且仅当元宵馅不同或者元宵皮不同。 碗和桌子都是有编号的，但是你不能改变碗或桌子的编号。 你可以认为碗和桌子都是固定的，你只能改变元宵的种类和位置。",
      "输入描述：": "输入共一行，五个整数 ，意义同题目描述。",
      "输出描述：": "每行一个整数，表示答案。"
    },
    "PositiveTags": "数学,快速幂",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "1 2 1 3 998244353",
    "Output": "8"
  },
  "4": {
    "questionNum": "NC15188",
    "questionTitle": "多项式乘法\n            ",
    "difficulty": "1606",
    "content": {
      "题目描述：": "Etéreo 吃完了元宵，又开始思考数学问题了。这次他拿了两个多项式 和 。他知道这两个多项式的乘积也是一个多项式，但他不清楚每一项的系数。所以他又来请问你咯。",
      "输入描述：": "输入共三行。第一行两个整数 ，表示多项式的最高次项次数和的最高次项次数。第二行个整数，表示多项式的每一项的系数。按次数从小到大的顺序排列。第三行个整数，表示多项式的每一项的系数。按次数从小到大的顺序排列。",
      "输出描述：": "输出共一行， 个整数，表示乘积多项式的每一项的系数。按次数从小到大排列。"
    },
    "PositiveTags": "模拟",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "2 3\n2 1 3\n1 2 0 2",
    "Output": "2 5 5 10 2 6"
  },
  "5": {
    "questionNum": "NC15189",
    "questionTitle": "圆与三角形\n            ",
    "difficulty": "1458",
    "content": {
      "题目描述：": "成功解决了小马喝水问题之后， Etéreo 感到无比的兴奋。他迫不及待地又开始了圆与三角形间关系的研究。在图书馆里泡了一天之后， Etéreo 神秘兮兮的找到你，给了你一个圆，一个内接三角形，和一个公式 ：那么问题来了，对于给定半径 的圆，在其所有的内接三角形中， 的值最大可以是多少？",
      "输入描述：": "输入共一行，一个实数 ，表示给定圆的半径。",
      "输出描述：": "输出共一行，一个实数，最大的 值，保留两位小数（四舍五入）。"
    },
    "PositiveTags": "数学",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "1.00",
    "Output": "2.00"
  },
  "6": {
    "questionNum": "NC15232",
    "questionTitle": "三视图\n            ",
    "difficulty": "707",
    "content": {
      "题目描述：": "Etéreo 拿出家里的许多的立方体积木，堆成了一个三维空间中的模型。既然你高考选了技术， 那想必你一定想知道，这个模型的三视图是什么吧！ 图中， 轴、 轴和 轴的方向已经标明。现在规定，图中的红色面为主视面，蓝色面为右视面（注意输出中应为左视而非右视），黄色面为俯视面。具体方向可以观察样例。",
      "输入描述：": "第一行四个数 ，表示该三维空间大小为 ，且有 个立方体。接下去 行，每行三个整数 ，表示其位置坐标。",
      "输出描述：": "输出共 行，前 行每行 个字符，输出正视图及左视图，两幅图之间有一列空格；接下去输出一个空行；再接下去 行，每行 个字符，表示俯视图。其中 表示空， 表示有立方体。"
    },
    "PositiveTags": "模拟",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "2 2 2 2\n1 1 1\n2 2 2",
    "Output": ".x .x\nx. x.\n\nx.\n.x"
  },
  "7": {
    "questionNum": "NC15233",
    "questionTitle": "あなたの蛙は旅立っています\n            ",
    "difficulty": "211",
    "content": {
      "题目描述：": "あなたの蛙は旅立っています！ 你的蛙正在考虑它应该按怎样的路线去旅行。这些景点可以抽象为个镶嵌着的六边形。每个景点都有一个快乐度 。蛙蛙想要决定一条路线，使得路线上的景点快乐度之和最大。而你的蛙蛙又是一只不走回头路的蛙，所以它每次只能朝远处走。比如，上图就是一个例子。蛙蛙会从最上方的黄色六边形出发，每次只能走到下方的直接相邻的三个六边形中（边界上可能只有一个或两个直接相邻的六边形），这样一直走到最下方的黄色六边形中。这一段旅程总的快乐值定义为途径的景点的快乐值之和。蛙蛙想要找到一条快乐值最大的路径开始它的旅行。 你的蛙蛙已经迫不及待了，赶紧 したく 然后 かんりょう 吧！",
      "输入描述：": "输入第一行一个数 ， 表示大六边形的边长（边长定义为大六边形的一条边上小六边形的个数）。接下去 行，每行 个整数 ，描述大六边形中的一行景点的快乐度。具体可以看题目描述中的图。图中，颜色相同的并且在同一行的数字将会作为输入中的一行。\n其中：\n第 1 ~ n 行：第 i 行 i 个数\n第 n + 1 ~ 3n - 2 行：\n第 n + 1, n + 3, ..., 3n - 3 行 n - 1 个数\n第 n + 2, n + 4, ..., 3n - 2 行 n 个数\n第 3n - 1 ~ 4n - 3 行：\n分别是 n - 1, n - 2, ..., 1 个数",
      "输出描述：": "输出共一行，一个整数，表示最大能得到的快乐值。"
    },
    "PositiveTags": "动态规划",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "3\n8\n3 7\n9 1 -5\n-2 4\n-1 6 2\n8 0\n5 -3 5\n2 6\n4",
    "Output": "45"
  },
  "8": {
    "questionNum": "NC15234",
    "questionTitle": "写真がとどいています\n            ",
    "difficulty": "451",
    "content": {
      "题目描述：": "写真がとどいています！ 可以欣慰地发现，你的蛙蛙正在和一些朋友们唱着歌。但让人哭笑不得的是，蛙蛙对着谜一般的五线谱看得满头大汗。你得去帮帮你的蛙蛙。 上面就是一个五线谱的例子。为了简化问题，蛙蛙的五线谱没有加线与加间，音符只有一种时值，所以总共只有九种音符啦。你的蛙蛙知道音名，所以你只需要把五线谱翻译成音名就可以啦！好心的蜜蜂会帮你传去你的消息。",
      "输入描述：": "第一行一个数 ，表示五线谱的长度。第二行到第十行，每行一个长为 的字符串，仅由 组成，表示五线谱。其中 表示线， 表示间， 表示音符（符头）位置，表示小节线。注意，数据不保证每小节拍数相同，甚至可能存在某个小节中没有音符。但保证每一列要么全是 字符，要么有且仅有一个 字符，所以你只要照着样子翻译即可。",
      "输出描述：": "一行一个长为的字符串，仅由 的字母及组成。其中 表示音名， 表示小节线。"
    },
    "PositiveTags": "模拟",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "8\n--|o-|--\n..|..|..\n--|--|o-\n..|..|..\n-o|--|--\n..|.o|..\n--|--|-o\no.|..|..\n--|--|--",
    "Output": "FB|FA|DG"
  },
  "9": {
    "questionNum": "NC15235",
    "questionTitle": "あなたの蛙が帰っています\n            ",
    "difficulty": "441",
    "content": {
      "题目描述：": "あなたの蛙が帰っています！ 蛙蛙完成了一趟旅行，回家啦！但它还是没有去它心中非常想去的几个地方。总共有 N 个它 想去的目的地。蛙蛙下定了决心，它要做一个愿望清单，一定要让自己去那些想去的地方。蛙蛙 是这样做的：它会不定时地想起一个或多个目的地，然后按顺序写在愿望清单上。但是每次蛙蛙 出去旅行时，都会先去最近写在愿望清单上的地方，并且蛙蛙不会重复去一个目的地，但它会去 访问所有的目的地。蛙蛙有个最想去的地方，这个地方是它第一个想到的，但由于种种原因，这 个地方不能是第一个被蛙蛙访问的。蛙蛙脑中回想目的地的顺序是固定的，所以它想请问你，它最终访问这些目的地的顺序有多少种？对于两种访问序列和，它们是不同的当且仅当存在至少一个，使得 。 为了让大家不被卡题意，这里给出一句话题意：已知一个没有深度限制的栈的入栈序列为 ，且 不能第一个出栈。求合法的出栈序列个数。答案对 取模。",
      "输入描述：": "第一行一个数 ，表示蛙蛙有 组询问。接下去 行，每行一个正整数 ， 表示目的地的个数（入栈元素个数）。",
      "输出描述：": "输出共行，每行一个答案，格式形如 ，具体可见样例。答案可能较大，请对 取模后输出。"
    },
    "PositiveTags": "组合数学,卡特兰数",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "3\n3\n9\n24",
    "Output": "Case #1: 3\nCase #2: 3432\nCase #3: 508887030"
  },
  "10": {
    "questionNum": "NC15236",
    "questionTitle": "おみやげをまらいました\n            ",
    "difficulty": "2126",
    "content": {
      "题目描述：": "おみやげをまらいました！  蛙蛙还是给你带来了礼物。但它有个小小的要求，那就是你得在石头剪刀布上赢过它才能拿到礼物哦！你们这样规定：有三个字符串，表示三种出拳种类，其中可以打败，可以打败，可以打败。现在根据你的观察，你已经知道了蛙蛙心想的出拳顺序，你需要安排自己的出拳顺序，使得你能在每一局中都获胜。 “焼きまんじゅう”、“ういろう”、“⽡せんべい”、“福だるま”、“⽉うさぎのボタン”……",
      "输入描述：": "前三行每行两个字符串，每行 ，表示 能打败 。数据保证不互相矛盾，且其中有恰好三种不同的字符串。接下去一个数 ，表示次对战。接下去行每行一个字符串，表示蛙蛙的出拳种类。注意，蛙蛙的出拳可能不合法（即不是三种字符串中的），这时请输出 。",
      "输出描述：": "共行，每行一个字符串，表示每一局你需要出什么。如果对手出的不合法，输出 。"
    },
    "PositiveTags": "语言题",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "stone sci\nsci paper\npaper stone\n4\nstone\nsci\nspock\npaper",
    "Output": "paper\nstone\nFake\nsci"
  },
  "11": {
    "questionNum": "NC15384",
    "questionTitle": "数字方阵\n            ",
    "difficulty": "575",
    "content": {
      "题目描述：": "总是对数字的神秘感感到好奇。这次，他在纸上写下了 个从到的数字，并把这些数字排成了的方阵。他惊奇地发现，这个方阵中每行、每列和两条主对角线上的数字之和都不一样。他想要更多的方阵，但他再写不出来了。于是他㕛跑来找你，请你给他一个边长为 的满足上述性质的方阵。",
      "输入描述：": "输入共一行，一个整数，意义同题面描述。",
      "输出描述：": "输出共行，每行个整数，表示答案方阵。输出任意一种可行方案即可。"
    },
    "PositiveTags": "构造",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "3",
    "Output": "1 2 3\n8 9 4\n7 6 5"
  },
  "12": {
    "questionNum": "NC15385",
    "questionTitle": "小马过河\n            ",
    "difficulty": "867",
    "content": {
      "题目描述：": "开始涉猎几何领域了。他现在正在研究小马喝水问题。众所周知，这个问题中有一匹口渴的小马，一条笔直的河，以及小马的家。小马需要去河边喝水，然后再去家里。它需要走最短的路径。 解决这个问题也很简单，其中有一个步骤是要做小马家关于河水的对称点。正对此感到一些烦恼。他不会做这个。他想请你帮他作一条过小马家且垂直于河水的线，然后告诉垂足的位置。",
      "输入描述：": "第一行一个整数 ，表示 的询问个数。接下去行，每行个实数 ，表示小马家在点 ，河水为直线",
      "输出描述：": "输出共行，每行两个实数 ， 表示答案垂足点的坐标 。当你的答案与标准输出的误差小于 时，视为答案正确。"
    },
    "PositiveTags": "计算几何",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "3\n0 1 0 0 1 1\n2.13 -6.89 1.78 1.20 -7.73 0.56\n3.473 -4.326 -4.851 -0.819 2.467 -2.729",
    "Output": "0.5000000 0.5000000\n1.5864392 1.1869738\n3.7990750 -3.076672"
  },
  "13": {
    "questionNum": "NC15517",
    "questionTitle": "真真假假\n            ",
    "difficulty": "1971",
    "content": {
      "题目描述：": "乾为天，刚健中正，自强不息；坤为地，柔顺伸展，厚载万物。 乾卦：天行健，君子以自强不息。困龙得水好运交，不由喜气上眉梢，一切谋望皆如意，向后时运渐渐高。 坤卦：地势坤，君子以厚德载物。肥羊失群入山岗，饿虎逢之把口张，适口充肠心欢喜，卦若占之大吉昌。算卦先生来问你，对于每个他给出的 C++ 头文件，请告诉他是否存在。 头文件列表：algorithm, bitset, cctype, cerrno, clocale, cmath, complex, cstdio, cstdlib, cstring, ctime, deque, exception, fstream, functional, limits, list, map, iomanip, ios, iosfwd, iostream, istream, ostream, queue, set, sstream, stack, stdexcept, streambuf, string, utility, vector, cwchar, cwctype",
      "输入描述：": "第一行一个正整数，表示询问个数。接下去行，每行一个仅由小写字母构成的字符串，表示一个询问。",
      "输出描述：": "输出共行，每行一个字符串 表示这个头文件存在，或表示这个头文件不存在。"
    },
    "PositiveTags": "字符串",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "3\ncstdio\nsplay\nfstream",
    "Output": "Qian\nKun\nQian"
  },
  "14": {
    "questionNum": "NC15518",
    "questionTitle": "虚虚实实\n            ",
    "difficulty": "643",
    "content": {
      "题目描述：": "震为雷，临危不乱，亨通畅达；巽为风，柔顺伸展，厚载万物。震卦：洊雷，震，君子以恐惧修省。一口金钟在淤泥，人人拿着当玩石，忽然一日钟悬起，响亮一声天下知。 巽卦：随风，巽，君子以申命行事。一叶孤舟落沙滩，有篙无水进退难，时逢大雨江湖溢，不用费力任往返。算卦先生来问你，对于每个他给出的无向图，是否存在一条路径能够经过所有边恰好一次，并且经过所有点？不需要满足最后回到起点。",
      "输入描述：": "第一行一个数，表示有组数据。对与每组数据，第一行有两个数 ，接下去行每行两个数描述一条无向边 。图不保证联通。",
      "输出描述：": "对于每组数据，如果存在，输出 ，否则输出。"
    },
    "PositiveTags": "数据结构,并查集",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "2\n2 2\n1 1\n2 1\n4 6\n1 3\n1 4\n1 2\n3 2\n4 2\n4 3",
    "Output": "Zhen\nXun"
  },
  "15": {
    "questionNum": "NC15519",
    "questionTitle": "是是非非\n            ",
    "difficulty": "895",
    "content": {
      "题目描述：": "坎为水，险阳失道，渊深不测；离为火，依附团结，光明绚丽。 坎卦：水洊至，习坎；君子以常德行，习教事。一轮明月照水中，只见影儿不见踪，愚夫当财下去取，摸来摸去一场空。 离卦：明两作，离，大人以继明照四方。官人来占主高升，庄农人家产业增，生意买卖利息厚，匠艺占之大亨通。有一些石子堆，第堆有个石子。你和算卦先生轮流从任一堆中任取若干颗石子（每次只能取自一堆，并且不能不取），取到最后一颗石子的人获胜。算卦先生来问你，如果你先手，你是否有必胜策略？若是改动其中几个石子堆中石子的数量呢？",
      "输入描述：": "第一行两个正整数 ，表示有个石堆， 次操作。第二行个整数，第个数表示第个石堆初始有个石子。接下去行，每行两个正整数，表示把第堆石子的个数修改成 。操作是累计的，也就是说，每次操作是在上一次操作结束后的状态上操作的。",
      "输出描述：": "共 行，输出每次操作之后先手是否有必胜策略。如果有，输出，否则输出。"
    },
    "PositiveTags": "数学,博弈论",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "5 4\n6 7 3 4 5\n1 6\n2 1\n2 4\n5 5",
    "Output": "Kan\nKan\nLi\nLi"
  },
  "16": {
    "questionNum": "NC15520",
    "questionTitle": "黑黑白白\n            ",
    "difficulty": "311",
    "content": {
      "题目描述：": "艮为山，动静得宜，适可而止；兑为泽，刚内柔外，上下相和。 艮卦：兼山，艮；君子以思不出其位。财帛常打心头走，可惜眼前难到手，不如意时且忍耐，逢着闲事休开口。 兑卦：丽泽，兑；君子以朋友讲习。这个卦象真可取，觉着做事不费力，休要错过这机关，事事觉得随心意。有一个棋子放在一颗有根树的根上。你和算卦先生轮流把这个棋子向所在点的其中一个儿子移动（只能移动到儿子）。不能再移动就算失败（即棋子所在节点没有儿子）。算卦先生来问你，如果你先手，你是否有必胜策略？",
      "输入描述：": "第一行一个数 ，表示有组数据。接下去每组数据的第一行有两个数 ，表示树有个节点，其中为根节点编号（从开始编号）。接下去行每行两个数字 ，表示点和之间有一条边。",
      "输出描述：": "每组数据输出一行，表示先手有必胜策略，表示没有。"
    },
    "PositiveTags": "数学,博弈论",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "2\n3 1\n1 2\n2 3\n5 4\n1 2\n1 3\n3 4\n4 5",
    "Output": "Dui\nGen"
  },
  "17": {
    "questionNum": "NC15521",
    "questionTitle": "文\n            ",
    "difficulty": "754",
    "content": {
      "题目描述：": "Sεlιнα(Selina) 开始了新一轮的男友海选。她要求她的男友要德智体美劳样样都全。首先进行的是文化知识竞赛。 Sεlιнα 精心准备了一套选择题，每个选择题有且只有一个正确答案。她邀请参赛男友们来答题，并回收了试卷准备批改。可是她却犯了愁。她不知道怎么快速地批改完这些试卷。她知道你是计算机大佬，就跑来请你写个程序帮她批改试卷。 Sεlιнα 会给你一份标准答案，再给你每个参赛男友的答卷。答卷中的每道题可能有一个答案， 也可能没有作答。你要做的是最后告诉 Sεlιнα 谁拿到了最高分，以及最高分的分数（分数为分制）。Sεlιнα 喜欢优美的名字，所以如果有同样的分数，请告诉她其中字典序最小的选手名字。 不要偷懒哦！要是你告诉了 Sεlιнα 错误的答案，她会很生气的！",
      "输入描述：": "第一行两个整数 ，表示有道选择题和个参赛男友。第二行一个长为的字符串，表示标准答案。其中第个字母表示第个选择题的答案。保证所有字母在 中。接下去行，每两行表示一个参赛男友：· 第一行一个字符串，表示参赛者姓名，保证姓名仅由大小写字母组成；· 第二行一个长为的字符串，表示该参赛者的答案。其中第个字母表示该参赛者对于第个选择题的答案。保证所有字母在中。 表示该参赛者未作答此题。",
      "输出描述：": "输出共两行，第一行是最高分的参赛男友姓名，第二行为其分数。分数为分制，保留两位小数。若有多人同分，输出字典序最小的姓名。"
    },
    "PositiveTags": "排序",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "5 3\nADBBC\nspiderman\nADBAC\nniconico\nBDXBC\nekstieks\nACBBC",
    "Output": "ekstieks\n80.00"
  },
  "18": {
    "questionNum": "NC15522",
    "questionTitle": "武\n            ",
    "difficulty": "652",
    "content": {
      "题目描述：": "其次，Sεlιнα(Selina) 要进行体力比武竞赛。在 Sεlιнα 所在的城市，有个街区，编号为 ，总共有条的街道连接这些街区， 使得每两个街区之间都直接或间接地有街道将它们相连。Sεlιнα 把通过了文化知识竞赛的参赛男友们召集到她家所在的街区，并以这个街区为起点，让所有参赛男友们向其他街区跑去。这些参赛者们被命令不准重复跑某条街道，而且在规定时间内要尽可能地跑远。比赛结束后，所有参赛者将停留在他们此时所在的街区。之后 Sεlιнα 开始视察结果。现在她知道每个街区都有一些她的参赛男友停留着，她现在想先去看看离她家第近的街区。所以作为一位好帮手，你的任务是要告诉她所有街区中，离 Sεlιнα家第近的街区与 Sεlιнα 家之间的距离。",
      "输入描述：": "第一行三个整数，，含义同题面描述。接下去 行，每行三个整数，，表示从第个街区到第个街区有一条权值为 的街道相连。街区从开始标号。",
      "输出描述：": "输出共一行，一个整数，表示所有街区与 Sεlιнα 家所在街区之间最近距离的第小值。"
    },
    "PositiveTags": "深度优先搜索(DFS),搜索",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 32768K，其他语言65536K",
    "Input": "3 3 2\n1 2 4\n2 3 5",
    "Output": "9"
  },
  "19": {
    "questionNum": "NC15523",
    "questionTitle": "艺\n            ",
    "difficulty": "182",
    "content": {
      "题目描述：": "接下去，Sεlιнα(Selina) 又搞了个文艺竞演。虽说是文艺竞演，其实只是为了满足 Sεlιнα 的内心企盼——看群男友献歌献舞。她排列好了各个参赛男友的节目顺序，然后将他们安排在两个舞台上表演，自己则在演播室里使用两台闭路电视同时观看。万万没想到的是，当一切准备就绪时，其中一台电视炸了，她不会修，也没有时间修。于是只能尴尬地使用一台闭路电视观看两个舞台上的节目。当然，这台电视不支持分屏同时观看，所以 Sεlιнα 只能不停地换台观看。现在，作为导演的 Sεlιнα 已经知道了两个舞台的节目 单以及每个节目对于她所能产生的愉悦度，她想安排电视在每个时刻播放的频道（可以在某些时刻不看），使得自己能得到最大的愉悦度。现在请优秀的你告诉 Sεlιнα 最大能产生的愉悦度是多少。 要注意的是，文艺竞演没有广告插播，所以当一个节目结束时，另一个节目会立刻开始演出。 并且 Sεlιнα 看节目以分钟为单位，也就是说，她只能在每分钟结束的那一刻切换舞台。节目对 Sεlιнα 产生愉悦度是以分钟为单位的，也就是说，她看第个节目每一分钟就会产生的愉悦度。而 Sεlιнα 对节目的完整性丝毫不在意，没有完整地看一个节目是没有关系的。",
      "输入描述：": "第一行三个数 ，表示舞台一有个节目，舞台二有个节目，总时长为分钟。接下去行，每行两个整数，表示舞台一的第个节目在第 分钟结束后开始，每分钟能产生愉悦度。当一个节目开始时，这个舞台之前正在播放的节目直接停止，中间没有暂停。接下去行，每行两个整数，表示舞台二的第个节目在第分钟结束后开始，每分钟能产生愉悦度。当一个节目开始时，这个舞台之前正在播放的节目直接停止，中间没有暂停。数据保证每个舞台都有一个在分钟时开始的节目（即最开始的节目），并且在同一个舞台中没有两个节目开始时间相同（即没有一个节目时长为 ）。数据不保证输入中每个舞台的会从小到大排序。",
      "输出描述：": "输出共一行，一个整数，表示最大的愉悦度。"
    },
    "PositiveTags": "贪心",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "2 2 5\n2 3\n0 2\n0 3\n3 1",
    "Output": "15"
  },
  "20": {
    "questionNum": "NC15524",
    "questionTitle": "美\n            ",
    "difficulty": "398",
    "content": {
      "题目描述：": "最后，Sεlιнα(Selina) 开始了选美大赛。 一如既往地，Sεlιнα 想最大化自己的愉悦度。她品味十分独特，对“美”有自己独到的见解。 她给每位经过层层选拔来到这一关的参赛男友都定义了一个帅气值。Sεlιнα 需要将这些参赛者排成一排，她对于这个排列的“美”值的定义是： 其中表示排列中第个人的帅气值。特别地，当时，有。她依旧想使自己获得最大的愉悦值，所以她要使这个排列的值尽可能地大。聪明的你，快来告诉 Sεlιнα，这个最大的值是多少。",
      "输入描述：": "第一行一个整数，表示有个男友。第二行个整数，第个数表示值。",
      "输出描述：": "输出共一行，一个整数，表示最大的值。"
    },
    "PositiveTags": "构造",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "5\n7 3 15 12 8",
    "Output": "34"
  },
  "21": {
    "questionNum": "NC15668",
    "questionTitle": "音标\n            ",
    "difficulty": "1796",
    "content": {
      "题目描述：": "我们规定元音字母有a、e、i、o、u，并且规定半元音字母y也是元音字母。Cwbc在学习英语，XHRlyb为了让Cwbc的记忆更加深刻，于是她让Cwbc把每个字符串的所有字母都变成一个恰好不大于它本身的小写元音字母。可是Cwbc比较贪玩，并且他想让你帮他完成这个任务。 聪明的你在仔细阅读题目后，一定可以顺利的解决这个问题！",
      "输入描述：": "输入数据有多行，每行有一个仅包含小写字母的字符串。",
      "输出描述：": "输出数据应有多行，每行有一个变化后的字符串。"
    },
    "PositiveTags": "模拟",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 32768K，其他语言65536K",
    "Input": "aeiou",
    "Output": "aeiou"
  },
  "22": {
    "questionNum": "NC15669",
    "questionTitle": "躲藏\n            ",
    "difficulty": "678",
    "content": {
      "题目描述：": "XHRlyb和她的小伙伴Cwbc在玩捉迷藏游戏。 Cwbc藏在多个不区分大小写的字符串中。 好奇的XHRlyb想知道，在每个字符串中Cwbc作为子序列分别出现了多少次。 由于Cwbc可能出现的次数过多，你只需要输出每个答案对2000120420010122取模后的结果。 聪明的你在仔细阅读题目后，一定可以顺利的解决这个问题！",
      "输入描述：": "输入数据有多行，每行有一个字符串。",
      "输出描述：": "输出数据应有多行，每行表示一个答案取模后的结果。"
    },
    "PositiveTags": "线性dp,动态规划",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 32768K，其他语言65536K",
    "Input": "Cwbc",
    "Output": "1"
  },
  "23": {
    "questionNum": "NC15670",
    "questionTitle": "博弈\n            ",
    "difficulty": "244",
    "content": {
      "题目描述：": "XHRlyb在和Cwbc玩游戏。 在一个多重集合中有在[l,r]中的全部整数各一个，即l，l+1，l+2，......，r。 每次XHRlyb和Cwbc可以选择一个大于0的数字p，把p从多重集合中删去，然后向集合中加入k个，最后不能操作的人算输。 如果博弈双方都是绝顶聪明的，并且XHRlyb先手，请你来帮XHRlyb预测这一局游戏谁会获胜。如果博弈双方谁也无法取胜，那么判定为平局。聪明的你在仔细阅读题目后，一定可以顺利的解决这个问题！",
      "输入描述：": "输入数据有多行，每行有三个正整数，l，r，k。",
      "输出描述：": "输出数据应有多行，如果这一局XHRlyb获胜，那么请输出XHRlyb；如果Cwbc获胜，请输出Cwbc；如果两人平局，请输出Draw。"
    },
    "PositiveTags": "数学,博弈论",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 131072K，其他语言262144K",
    "Input": "1 3 2",
    "Output": "XHRlyb"
  },
  "24": {
    "questionNum": "NC15675",
    "questionTitle": "妹纸\n            ",
    "difficulty": "96",
    "content": {
      "题目描述：": "XHRlyb发明了一类数，叫做妹纸数。 假设xi∈[p,q]，yi∈[u,v]，且xi与yi均为整数，我们称这区间[p,q]相对于区间[u,v]的妹纸数为 XHRlyb想让Cwbc帮她快速计算多组区间(a,b]相对于区间[l,r)的妹纸数。 Cwbc显然是愿意帮助她的，但他知道你不想解决这个问题，于是就把这个问题交给了你。 聪明的你在仔细阅读题目后，一定可以顺利的解决这个问题！",
      "输入描述：": "输入数据有多行，每行有四个整数，a，b，l，r。",
      "输出描述：": "输出数据应有多行，每行有一个数，表示答案。"
    },
    "PositiveTags": "枚举,前缀和",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 32768K，其他语言65536K",
    "Input": "2 3 1 2",
    "Output": "0"
  },
  "25": {
    "questionNum": "NC15694",
    "questionTitle": "幻方\n            ",
    "difficulty": "36",
    "content": {
      "题目描述：": "Cwbc制作了一个神奇的幻方，他想给XHRlyb一个惊喜。 幻方是一个正方体。在这个幻方的表面，有若干个激光发射器，其发射出的激光可以无视任何障碍地沿直线穿过幻方。与众不同的，其上下面的激光是绿色，前后面的激光是蓝色，左右面的激光是红色。 XHRlyb一个方块是美观的，当且仅当这个格子被三种不同颜色的激光同时穿过（可以对照样例理解题目大意）。 请你计算出有多少个方块是美观的。XHRlyb站在幻方的内部，看着四周没有被点亮的激光发射器，心中产生了一个美好的幻想——聪明、智慧又帅气的Cwbc到底会给她一个什么样的惊喜呢？ 聪明的你在仔细阅读题目后，一定可以顺利的解决这个问题！",
      "输入描述：": "有多组数据，对于每组数据，格式为：第一行，输入一个整数N。接下来描述长方体不同面上的情况，字符#表示在这个表面上有一个激光发射器，字符.表示没有。接下来N行，每行N个字符，表示从内部看正面的情况。接下来N行，每行N个字符，表示从内部看背面的情况。接下来N行，每行N个字符，表示从内部看左侧面的情况。接下来N行，每行N个字符，表示从内部看右侧面的情况。接下来N行，每行N个字符，表示从内部看顶面的情况。接下来N行，每行N个字符，表示从内部看底面的情况。",
      "输出描述：": "对于每组数据，输出一个整数表示美观的方块的个数。"
    },
    "PositiveTags": "模拟",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 65536K，其他语言131072K",
    "Input": "5\n.####\n#.###\n##.##\n###.#\n####.\n.####\n#.###\n##.##\n###.#\n####.\n.####\n#.###\n##.##\n###.#\n####.\n.####\n#.###\n##.##\n###.#\n####.\n.####\n#.###\n##.##\n###.#\n####.\n.####\n#.###\n##.##\n###.#\n####.",
    "Output": "112"
  },
  "26": {
    "questionNum": "NC15699",
    "questionTitle": "异或\n            ",
    "difficulty": "962",
    "content": {
      "题目描述：": "Cwbc想测试一下他的加密协议，以便防止其他人偷看他给XHRlyb的信。 Cwbc提出了这样一个问题：在区间[a,b]和区间[c,d]中分别等概率随机选择一个整数，两者异或之后等于0的概率是多少？ XHRlyb 一眼就看出了这个题目的答案，但她想让你计算一下这个概率。为了防止精度误差，你只需要输出一个形如a/b的最简分数。特别的，如果概率为0，你需要输出0/1。 聪明的你在仔细阅读题目后，一定可以顺利的解决这个问题！",
      "输入描述：": "输入数据有多行，每行有四个非负整数a, b, c, d。",
      "输出描述：": "输出数据应有多行，每行有一个表示答案，形如x/y的最简分数。"
    },
    "PositiveTags": "动态规划",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 32768K，其他语言65536K",
    "Input": "1 2 3 4",
    "Output": "0/1"
  },
  "27": {
    "questionNum": "NC15748",
    "questionTitle": "旅游\n            ",
    "difficulty": "907",
    "content": {
      "题目描述：": "Cwbc和XHRlyb生活在 s 市，这天他们打算一起出去旅游。旅行地图上有 n 个城市，它们之间通过 n-1 条道路联通。Cwbc和XHRlyb第一天会在 s 市住宿，并游览与它距离不超过 1 的所有城市，之后的每天会选择一个城市住宿，然后游览与它距离不超过 1 的所有城市。他们不想住在一个已经浏览过的城市，又想尽可能多的延长旅行时间。XHRlyb想知道她与Cwbc最多能度过多少天的时光呢？ 聪明的你在仔细阅读题目后，一定可以顺利的解决这个问题！",
      "输入描述：": "第一行，两个正整数n和s，表示城市个数和第一天住宿的城市s。接下来n-1行，每行两个整数x和y，表示城市x与城市y之间有一条双向道路。",
      "输出描述：": "第一行，一个非负整数表示答案。"
    },
    "PositiveTags": "动态规划",
    "TimeLimit": "C/C++ 3秒，其他语言6秒",
    "SpaceLimit": "C/C++ 65536K，其他语言131072K",
    "Input": "4 1\n1 2\n2 3\n3 4",
    "Output": "2"
  },
  "28": {
    "questionNum": "NC15749",
    "questionTitle": "纪年\n            ",
    "difficulty": "822",
    "content": {
      "题目描述：": "Cwbc和XHRlyb在学习干支纪年法。 干支纪年法是中国历法上自古以来就一直使用的纪年方法。干支是天干和地支的总称。甲、乙、丙、丁、戊、己、庚、辛、壬、癸等十个符号叫天干；子、丑、寅、卯、辰、巳、午、未、申、酉、戌、亥等十二个符号叫地支。 为了方便程序的书写，我们不妨将天干记做1到10，地支记做1到12。 通过查阅日历，Cwbc知道农历2018年是戊戌年，XHRlyb想知道农历的n年是什么年。 0年指1年的前一年。聪明的你在仔细阅读题目后，一定可以顺利的解决这个问题！",
      "输入描述：": "输入数据有多组数据，每行有一个整数，表示n。",
      "输出描述：": "输出数据应有多行，每行两个整数，分别表示天干和地支的编号。"
    },
    "PositiveTags": "思维",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 32768K，其他语言65536K",
    "Input": "2018",
    "Output": "5 11"
  },
  "29": {
    "questionNum": "NC15750",
    "questionTitle": "排名\n            ",
    "difficulty": "588",
    "content": {
      "题目描述：": "Cwbc和XHRlyb都参加了SDOI2018，他们特别关心自己的排名。 我们定义每一场比赛每位选手的标准分为它的分数乘以满分再除以比赛中选手所获得的最高分。 NOIP2017的满分为600分，SDOI2018每一天的比赛满分均为300分。 我们定义总分为NOIP2017的标准分的25%，加上SDOI2018 前两天标准分之和的25%，再加上SDOI2018后两天标准分之和的50%。 XHRlyb告诉你每一次比赛每个选手的分数，你需要按照名次从高到低依次输出他们的名字和总分。 聪明的你在仔细阅读题目后，一定可以顺利的解决这个问题！",
      "输入描述：": "输入数据有多组数据，对于每组数据，格式为：第一行，一个整数n，表示选手数量。接下来n行，每一行有用空格隔开的一个字符串和五个整数，分别表示选手姓名、NOIP2017成绩以及SDOI2018四天比赛的成绩。",
      "输出描述：": "输出数据应有多组，每组输出有多行，每行应有一个选手姓名和他的总分。输出的总分应保留5位小数，且如果总分的误差不超过10-5，我们认为两名选手并列。若两名选手并列，则按姓名的字典序顺序从小到大输出。"
    },
    "PositiveTags": "排序",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 65536K，其他语言131072K",
    "Input": "7\ntzt 570 290 155 300 295\ntyc 570 260 225 295 300\nrqy 540 275 110 290 290\ncz 520 260 130 285 290\nhly 490 185 155 290 285\nzhx 510 220 110 285 285\ndzm 510 185 85 280 280",
    "Output": "tyc 589.74138\ntzt 574.16667\nrqy 539.89262\ncz 534.91682\nhly 515.95886\nzhx 512.77374\ndzm 490.38869"
  },
  "30": {
    "questionNum": "NC15751",
    "questionTitle": "零点\n            ",
    "difficulty": "45",
    "content": {
      "题目描述：": "OI 的生涯如此短暂，恐怕就要到了分别的时候了。 回想起自己的OI 生活，那一切的一切都历历在目。 仍然记得，在骄阳似火的夏天，机房内一群完全不懂编程的小白，围在黑板前，听学长不厌其烦的讲解。 仍然记得，在金凤飒爽的秋天，考完NOIP时那失望的表情，那下定决心努力补弱的意志。 仍然记得，在白雪皑皑的冬天，靠在机房暖气边，整理着一份又一份的笔记，修改了一道又一道题目。 仍然记得，那些来自五湖四海的朋友们，那一场又一场的比赛，那一次又一次的集训。 尽管依依不舍，尽管不愿分别，可是——终于，要告别了吗？ 带着一颗热爱程序设计竞赛的心，祝愿自己能够与那个她共同考上理想的大学，祝大家能在这算法竞赛中，欣赏到美丽的风景，认识到志同道合的朋友们，达到自己想达到的高度，不断挑战自我，不断砥砺前行！ THE END —— JohnsonXHRlyb总喜欢找一些函数的零点。 一天，Cwbc给了XHRlyb一个函数，它是由n个二维平面上的点组成。 首先，Cwbc将这些点按照横坐标顺序从小到大排序。 然后，Cwbc将这些点连接成一条简单的折线（即点1连接点2，点2连接点3，......，点n-1连接点n）。 最后，Cwbc以点2为端点，作了一条经过点1的射线；以点n-1为端点，作了一条经过点n的射线。 这样，这个函数就完成啦~ XHRlyb见到这个函数，就迫不及待的找起了零点，但她想请你帮忙检验一下零点的正误。 为了方便起见，她只想检查整数零点的正误。所以你需要从小到大输出函数的整数零点。聪明的你在仔细阅读题目后，一定可以顺利的解决这个问题！",
      "输入描述：": "第一行：一个整数n。接下来n行：每行两个整数xi , yi。",
      "输出描述：": "将零点的数量记为cnt。若cnt > 3 * 105，则：第一行：一个整数-1。否则：第一行：一个整数cnt。第二行：cnt个整数，表示整数零点的横坐标，用空格隔开（如果cnt为0，则第二行不必输出）。"
    },
    "PositiveTags": "计算几何",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 131072K，其他语言262144K",
    "Input": "2\n-1 -1\n1 1",
    "Output": "1\n0"
  },
  "31": {
    "questionNum": "NC16119",
    "questionTitle": "三角形\n            ",
    "difficulty": "387",
    "content": {
      "题目描述：": "铁子从森林里收集了n根木棍，她开始将它们按顺序的排成一排，从左到右依次为1到n，她回想起 在数学课上老师教她的三角形知识，她开始从这些木棍中间找三根木棍来组成一个周长最大的三角形， 这时她的兄弟顺溜偷偷的溜了过来，偷走了第i根木棍，现在她想知道现在能够组成周长最大的三角形 的周长是多少？",
      "输入描述：": "第一行两个整数n和q。(1 ≤ n, q ≤ 105)第二行n个整数表示第i根木棍的长度ai。(1 ≤ ai ≤ 109)接下来q行，每行一个整数表示被顺溜偷走的木棍编号。注意每行的事件是独立的，也就是说每一次操作都是对于原来的n根木棍进行的。",
      "输出描述：": "对于每个询问输出一行表示答案，如果删除木棍后无法组成三角形则输出 -1 。"
    },
    "PositiveTags": "思维",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "6 2\n1 2 3 4 5 6\n6\n5",
    "Output": "12\n13"
  },
  "32": {
    "questionNum": "NC16120",
    "questionTitle": "博弈论\n            ",
    "difficulty": "651",
    "content": {
      "题目描述：": "铁子和顺溜在学习了博弈论的sg函数之后，解决了很多很多博弈题，现在他们遇到了一道难题。 给出一个长度为 n 的数列，数列里的每个元素都是个位数，这个数列的每一个连续子数列都能生成 一个十进制数，对于子数列a[l~r]，这个十进制数的个位为a[r],十位为a[r - 1]，...，最高位 为a[l]。 现在铁子需要知道最小的不能被该数列的子数列生成的十进制非负整数是多少？",
      "输入描述：": "第一行一个数字n。(1 ≤ n ≤ 1000)第二行n个数字di。(0 ≤ di ≤ 9)",
      "输出描述：": "输出一个数字表示答案。"
    },
    "PositiveTags": "枚举,暴力",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "4\n3 0 1 2",
    "Output": "4"
  },
  "33": {
    "questionNum": "NC16121",
    "questionTitle": "病菌感染\n            ",
    "difficulty": "2426",
    "content": {
      "题目描述：": "铁子和顺溜上生物课的时候不小心将几滴超级病菌滴到了培养皿上，这可急坏了他们。 培养皿可以被看成一个n*n的方格，最初病菌滴在了这n*n的格子中的某些格子，病菌的传染方式是这样的，如果一个方格与两个或多个被感染的方格相邻(两个方格相邻当且仅当它们只有一条公共边)， 那么它就会被感染。现在铁子和顺溜想知道，最终所有的方格会不会都被感染。",
      "输入描述：": "第一行两个整数n，m。n表示方格的规格，m表示最初病菌所在的格子数。(1 ≤ n ≤ 1000, 0 < m < n)。接下来m行每行两个整数xi,yi表示第xi行的第yi个格子有病菌。数据保证不会有两个病菌初始时在同一个格子。",
      "输出描述：": "如果最终所有的方格都会被感染，输出 YES。否则输出 NO。"
    },
    "PositiveTags": "思维",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "3 2\n1 2\n2 2",
    "Output": "NO"
  },
  "34": {
    "questionNum": "NC16122",
    "questionTitle": "郊区春游\n            ",
    "difficulty": "553",
    "content": {
      "题目描述：": "今天春天铁子的班上组织了一场春游，在铁子的城市里有n个郊区和m条无向道路，第i条道路连接郊区Ai和Bi，路费是Ci。经过铁子和顺溜的提议，他们决定去其中的R个郊区玩耍（不考虑玩耍的顺序），但是由于他们的班费紧张，所以需要找到一条旅游路线使得他们的花费最少，假设他们制定的旅游路线为V1, V2 ,V3 ... VR，那么他们的总花费为从V1到V2的花费加上V2到V3的花费依次类推，注意从铁子班上到V1的花费和从VR到铁子班上的花费是不需要考虑的，因为这两段花费由学校报销而且我们也不打算告诉你铁子学校的位置。",
      "输入描述：": "第一行三个整数n, m, R(2 ≤ n ≤ 200, 1 ≤ m ≤ 5000, 2 ≤ R ≤ min(n, 15))。第二行R个整数表示需要去玩耍的郊区编号。以下m行每行Ai, Bi, Ci(1 ≤ Ai, Bi≤ n, Ai≠ Bi, Ci≤ 10000)保证不存在重边。",
      "输出描述：": "输出一行表示最小的花费"
    },
    "PositiveTags": "状压dp,动态规划",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "4 6 3\n2 3 4\n1 2 4\n2 3 3\n4 3 1\n1 4 1\n4 2 2\n3 1 6",
    "Output": "3"
  },
  "35": {
    "questionNum": "NC16135",
    "questionTitle": "浮点数输出\n            ",
    "difficulty": "1679",
    "content": {
      "题目描述：": "给你一个浮点数，将它原样输出。",
      "输入描述：": "输入只有一行，一个浮点数。保证数据合法，不存在整数位的前导零以及小数位的后导零。",
      "输出描述：": "输出只有一行，一个浮点数。"
    },
    "PositiveTags": "语言题",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 32768K，其他语言65536K",
    "Input": "0.123456",
    "Output": "0.123456"
  },
  "36": {
    "questionNum": "NC16136",
    "questionTitle": "黑白棋\n            ",
    "difficulty": "48",
    "content": {
      "题目描述：": "端午节前夕，铁子和顺溜二人聊到了黑白棋，黑白棋是一个历史悠久的益智游戏，但是双方都觉得自己比较厉害谁也不服谁，然后开始了黑白棋探讨之旅，但是谁也没想到在一边观战的城哥拥有着一个预知未来的能力，能准确预知未来下子的位置（x,y），由于能力有限，却不能得知每个回合落子的颜色，但是能根据落子的位置判断是黑方还是白方，现在城哥想知道最后黑白双方的棋子比例是多少。（黑方先手）------分割线-------------------------------------------------------------下面是黑白棋规则介绍：这张图片是黑白棋的标准开局图,每局由执黑色棋玩家先下子，交互下子。直到游戏结束！ 棋盘为8×8的方格布局，开局时在棋盘正中有摆好的四枚棋子，黑白各2枚，交叉放置，由执黑棋的一方先落子，双方交替下子，棋子落在方格内，一局游戏结束后双方更换执子颜色。合法的棋步包括：在一个空格新落下一个棋子，并且翻转对手一个或多个棋子。 下子方式：把自己颜色的棋子放在棋盘的空格上，而当自己放下的棋子在横、竖、斜八个方向内有一个自己的棋子，则被夹在中间的对方棋子全部翻转会成为自己的棋子。夹住的位置上必须全部是对手的棋子，不能有空格。并且，只有在可以翻转棋子的地方才可以下子。 一步棋可以在数个方向上翻棋，任何被夹住的棋子都必须被翻转过来，棋手无权选择不去翻某个棋子必须是刚下的子夹对方才能够翻对方的子，因翻转对方的棋子而夹住的子是不能被翻的。 翻转棋子时，每次下子最少必须翻转对方一个棋子，若棋局中下子都不能翻转对方棋子，则自动pass轮空，己方无子可下，由对方继续下子。两个玩家都不能下子翻转对方棋子，游戏结束。",
      "输入描述：": "每行两个数字x,y代表落子坐标(1 ≤ x,y ≤ 8)以EOF结束下子，保证下子的正确性以及合法性，下完最后一颗子代表棋局结束。ps:emmmm... 貌似有点长，不要慌，问题不大（雾",
      "输出描述：": "输出一行，黑方与白方的棋子数量之比a:b"
    },
    "PositiveTags": "模拟",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "3 4\n5 3\n6 5\n3 5\n5 2\n7 5\n7 6\n7 7\n8 7\n2 3\n7 8\n5 1\n7 4\n8 5\n4 3\n7 3\n2 4\n2 5\n4 2\n3 1\n1 6\n6 3\n2 2\n1 4\n4 6\n2 6\n1 3\n3 3\n6 4\n3 7\n6 2\n7 1\n8 6\n8 8\n5 7\n2 1\n4 1\n5 6\n1 5\n4 7\n8 3\n6 6\n6 7\n8 4\n1 1\n5 8\n6 1\n3 2\n8 1\n6 8\n3 8\n3 6\n1 2\n8 2\n4 8\n7 2\n2 7\n1 7\n2 8\n1 8",
    "Output": "28:36"
  },
  "37": {
    "questionNum": "NC16137",
    "questionTitle": "相邻的糖果\n            ",
    "difficulty": "258",
    "content": {
      "题目描述：": "有n个盒子摆成一排，每个盒子内都有ai个糖果。 现在你可以执行以下操作： ·你可以选择任意一个盒子，在选择的盒子内吃掉一个糖果。 对你的要求如下： ·任何m个相邻的盒子内糖果数量不能超过x个。 请问，实现要求的最少操作次数是多少？",
      "输入描述：": "第一行三个数字n, m, x(2 ≤ n,m ≤ 106,1 ≤ x ≤ 109)。第二行n个数字(1 ≤ ai ≤ 109)。",
      "输出描述：": "输出一个操作数，代表实现要求的最少操作数。"
    },
    "PositiveTags": "贪心",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "3 2 3\n2 1 2",
    "Output": "0"
  },
  "38": {
    "questionNum": "NC16261",
    "questionTitle": "合唱队形\n            ",
    "difficulty": "337",
    "content": {
      "题目描述：": "铁子的班级在毕业晚会有一个合唱节目，到了毕业晚会的时候，他们必须排成一排一起合唱\"认错\"，\"当然是选择原谅他\"等一系列原谅歌曲，但是当队形布置好的时候，领导们觉得队形里最长的连续的女生的长度太小了，但是由于马上要开始演唱，所以最多只能两个人交换位置，问新队形中最长的连续的女生的长度是多少？",
      "输入描述：": "第一行一个数字n表示铁子班级的总人数。1≤n≤105第二行一个字符串s表示最初的队形布置，si=0表示第i个人是女生，si=1表示第i个人是男生。",
      "输出描述：": "输出一行表示答案"
    },
    "PositiveTags": "思维",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "6\n101010",
    "Output": "3"
  },
  "39": {
    "questionNum": "NC16301",
    "questionTitle": "强迫症\n            ",
    "difficulty": "1287",
    "content": {
      "题目描述：": "铁子最近犯上了强迫症，他总是想要把一个序列里的元素变得两两不同，而他每次可以执行一个这样的操作，他可以选择序列里的任意两个元素相加，不妨记作ai和aj，然后把ai+aj放进序列里，再删掉ai和aj其中的随便一个，问最少操作多少次可以完成铁子的愿望？",
      "输入描述：": "第一行一个整数n表示序列的长度(1≤n≤105)第二行n个整数ai表示序列的每个整数(1≤ai≤109)",
      "输出描述：": "输出一行表示答案"
    },
    "PositiveTags": "思维",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "3\n1 2 2",
    "Output": "1"
  },
  "40": {
    "questionNum": "NC16513",
    "questionTitle": "无关(relationship)\n            ",
    "difficulty": "876",
    "content": {
      "题目描述：": "若一个集合A内所有的元素都不是正整数N的因数，则称N与集合A无关。 给出一个含有k个元素的集合A= $a1,a2,a3,...,ak$ ，求区间[L,R]内与A无关的正整数的个数。 保证A内的元素都是素数。",
      "输入描述：": "输入数据共两行：第一行三个正整数L,R,k，意义如“题目描述”。第二行k个正整数，描述集合A，保证k个正整数两两不相同。",
      "输出描述：": "输出数据共一行：第一行一个正整数表示区间[L,R]内与集合A无关的正整数的个数"
    },
    "PositiveTags": "组合数学,容斥原理与鸽巢原理",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 32768K，其他语言65536K",
    "Input": "1 10 4\n2 3 5 7",
    "Output": "1"
  },
  "41": {
    "questionNum": "NC16514",
    "questionTitle": "范围(range)\n            ",
    "difficulty": "94",
    "content": {
      "题目描述：": "已知与均为实数，且满足： 给定A,B，求x的取值范围？由于Apojacsleam的计算几何往往被精度卡飞，所以他痛恨精度错误，于是给定的A，B都是正整数。请注意：题目中给的指的是仅为某些可以取任何值的变量名，与x没有任何关系。",
      "输入描述：": "输入数据共一行，两个正整数A,B，意义如“题目描述”。",
      "输出描述：": "输出一行描述答案：若有解，输出多个实数（至少两个），从小到大输出，保留两位小数，表示X的取值范围的端点，无解输出”No Answer.”（不含引号）注：如果端点有两个，以下四种情况的答案都是L,R：。请注意，如果L=R，则需要输出两次"
    },
    "PositiveTags": "数学",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 32768K，其他语言65536K",
    "Input": "3 5",
    "Output": "1.00 2.00"
  },
  "42": {
    "questionNum": "NC16515",
    "questionTitle": "水题(water)\n            ",
    "difficulty": "174",
    "content": {
      "题目描述：": "其中，f(1)=1;f(2)=1;Z皇后的方案数：即在Z×Z的棋盘上放置Z个皇后，使其互不攻击的方案数。",
      "输入描述：": "输入数据共一行，两个正整数x,m，意义如“题目描述”。",
      "输出描述：": "一个正整数k，表示输出结尾0 的个数或者放置皇后的方案数"
    },
    "PositiveTags": "组合数学,容斥原理与鸽巢原理",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 32768K，其他语言65536K",
    "Input": "375 16",
    "Output": "14200"
  },
  "43": {
    "questionNum": "NC16516",
    "questionTitle": "阶乘(factorial)\n            ",
    "difficulty": "854",
    "content": {
      "题目描述：": "",
      "输入描述：": "输入数据共一行，一个正整数n，意义如“问题描述”。",
      "输出描述：": "输出一行描述答案：一个正整数k，表示S的末尾有k个0"
    },
    "PositiveTags": "数学,思维",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "10",
    "Output": "7"
  },
  "44": {
    "questionNum": "NC16523",
    "questionTitle": "面积(area)\n            ",
    "difficulty": "75",
    "content": {
      "题目描述：": "定义“最大生成图”：在M*N的点阵中，连接一些点形成一条经过所有点恰好一次的回路，且连成的多边形各边互不交叉。这样形成的封闭图形叫做这个点阵的“最大生成图”，用表示。（PS：这个名字是出题人胡诌的，如有雷同纯属巧合，出题人不负法律责任）  显然，任意一个点阵都有“最大生成图”，并且有的点阵的“最大生成图”不止一个。  如图为3*3的矩阵的一个最大生成图：   给你一个M*N的点阵和一个三角形，问你是否可以通过若干次裁剪、拼接操作，使其某一个“最大生成图”成为该三角形？如果可以，请输出“Yes”（不含引号），否则请输出“No”。 在本题中，M*N的点阵内，相邻两点间的距离为1（上下相邻和左右相邻），为了简便，给定三角形的两个顶点，第三个顶点是原点。  由于Apojacsleam的计算几何往往被精度卡飞，所以他痛恨精度错误，于是给定的数字都是整数。",
      "输入描述：": "输入数据有多组：每组输入数据两行，第一行两个正整数M，N，第二行四个整数x1,y1,x2,y2,描述一个三角形数据不保证能够形成三角形。",
      "输出描述：": "对于每组输入数据，输出一行描述答案：“Yes”或“No”"
    },
    "PositiveTags": "广度优先搜索(BFS),深度优先搜索(DFS),搜索",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 32768K，其他语言65536K",
    "Input": "2 2\n2 0 2 1",
    "Output": "Yes"
  },
  "45": {
    "questionNum": "NC16537",
    "questionTitle": "圆(circle)\n            ",
    "difficulty": "518",
    "content": {
      "题目描述：": "签到题来了，送你们一个Python秒的题。  Apojacsleam来到了OI大陆，经过了连年征战，成为了一方国王。  Apojacsleam把他的王国命名为“Apo国”，Apo国的领土是一个标准的圆形。 Apojacsleam现在想封赏他的大臣，他在国境上建立了n个城市，要求他的大臣对这n个城市两两之间修建道路（道路是笔直的），把整个王国分成尽量多的区域，使得每一个大臣都有封土并且不会太大（以免谋反）。  于是Apojacsleam找你求助，他告诉你他打算建多少个城市，而你的任务是告诉他最多可以分成多少个部分。  说的太慢可是要被处死的，所以你必须要在1s之内回答。",
      "输入描述：": "输入数据有多组，每组一行，一个正整数n，意义如“题目描述”",
      "输出描述：": "对于每一组数据输出一行描述答案：输出一个正整数k，表示最多分成k份。"
    },
    "PositiveTags": "欧拉定理,数论",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 32768K，其他语言65536K",
    "Input": "2\n3",
    "Output": "2\n4"
  },
  "46": {
    "questionNum": "NC16559",
    "questionTitle": "异或(xor)\n            ",
    "difficulty": "576",
    "content": {
      "题目描述：": "从前，Apojacsleam家的水族箱里，养了一群热带鱼。  在这几条热带鱼里，Apojacsleam特别喜欢一条叫做TbGx（请勿人肉）的热带鱼，所以每次都让她第一个吃食物。对于每一条鱼，Apojacsleam都有一个顺序，鱼会按照这个顺序排序，越靠前的地位越高。 吃饱喝足是要睡觉的，这是人的刚需，也是鱼的刚需。 如果TbGx吃了Apojacsleam的食物，她就会睡觉（睡觉时长远小于一天）。这时第二条鱼还是饥肠辘辘的，第二条鱼就可以吃掉TbGx，那么第二条鱼又会睡觉......  注意：Apojacsleam养的鱼比Apojacsleam的智商高到不知道哪里去了，他们都是绝顶聪明的；而他们又是极其守规矩的，即他们不会多鱼分食一条鱼或者食物，只是按照顺序吃；当某一条鱼前面的鱼睡着以后，他可以选择不吃这条鱼，那么别的鱼（还活着的）也不会吃这条，即按照顺序的吃。  一开始，水族箱里只有TbGx一条鱼（未成年），但是，一条鱼成长两天就会成年，成年后就可以繁殖（无性繁殖？别问我我不知道），一天能繁殖一个后代。小鱼也会吃鱼的偶! 请问在前n天中，TbGx最多多少天可以吃饭？ Apojacsleam不希望TbGx饿着，所以你必须在1s内回答。",
      "输入描述：": "输入数据有多组，每组一个正整数n，意义如“题目描述”",
      "输出描述：": "对于每组输入数据，一行输出：即前n天中，最多有多少天TbGx可以吃饭。"
    },
    "PositiveTags": "思维",
    "TimeLimit": "C/C++ 2秒，其他语言4秒",
    "SpaceLimit": "C/C++ 32768K，其他语言65536K",
    "Input": "6",
    "Output": "4"
  },
  "47": {
    "questionNum": "NC16588",
    "questionTitle": "时间(time)\n            ",
    "difficulty": "892",
    "content": {
      "题目描述：": "Apojacsleam是一个喜欢特殊时刻的人。   他定义了一个时刻，若电子表显示ab:ba（24小时制），则该时刻为“回文时刻”（可以有前导零）。例如00:00就是回文时刻。    给定一个时刻，求此时刻的上一个和下一个回文时刻。 J题附加：00：00就是24：00，没有24：00这一时刻 J题附加：输入可能有前导0，输出不含前导0，例如10：1的意思是10：01，而10：10的输出为10：10",
      "输入描述：": "两个正整数，用“:”隔开，表示小时和分钟，保证输入时间合法。",
      "输出描述：": "两行，两个时刻（不含前导0），用“:”隔开，表示上一个时刻和下一个时刻"
    },
    "PositiveTags": "模拟",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 32768K，其他语言65536K",
    "Input": "09:33",
    "Output": "5:50\n10:1"
  },
  "48": {
    "questionNum": "NC16652",
    "questionTitle": "等价串\n            ",
    "difficulty": "242",
    "content": {
      "题目描述：": "一串长度为 n 的字符串 A 和一串长度为 m 的字符串 B。并且这两串字符串只会含有 0 或 1 。 铁子可以对字符串 A 执行两种操作，两种操作可以执行任意次。 操作1(无情替换):铁子可以用 11 替换掉 0 ，也可以用 00 替换掉 1 . 操作2(极限删除):铁子可以删除掉 111 ，也可以删除 000 . 现在问，字符串 A 可以变成字符串 B 吗？",
      "输入描述：": "第一行有一个整数T，表示有T(1<=T<=1000)组测试数据。接下来的每组数据，第一行有两个整数n，m(1<=n,m<=100)，表示字符串A和字符串B的长度。接下来有两行字符串，分别表示字符串A和字符串B。",
      "输出描述：": "对于每组测试数据，如果字符串A可以变为字符串B，则输出一行”YES”,否则输出一行”NO”.输出不包括引号。"
    },
    "PositiveTags": "思维",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "3\n3 4\n010\n1110\n3 4\n010\n1111\n7 2\n0001000\n00",
    "Output": "YES\nNO\nYES"
  },
  "49": {
    "questionNum": "NC16710",
    "questionTitle": "最大公约数(lcm)\n            ",
    "difficulty": "5048",
    "content": {
      "题目描述：": "给定两个正整数a,b,求a,b的最小公倍数。（即[a,b]）",
      "输入描述：": "两个整整数,a,b",
      "输出描述：": "一个正整数，表示[a,b]"
    },
    "PositiveTags": "gcd与exgcd,数论",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 32768K，其他语言65536K",
    "Input": "12 24",
    "Output": "24"
  },
  "50": {
    "questionNum": "NC16722",
    "questionTitle": "区间 (interval)\n            ",
    "difficulty": "941",
    "content": {
      "题目描述：": "Apojacsleam喜欢数组。  他现在有一个n个元素的数组a，而他要对a[L]-a[R]进行M次操作：   操作一：将a[L]-a[R]内的元素都加上P    操作二：将a[L]-a[R]内的元素都减去P  最后询问a[l]-a[r]内的元素之和？  请认真看题干及输入描述。",
      "输入描述：": "输入共M+3行：第一行两个数，n，M，意义如“题目描述”第二行n个数，描述数组。第3-M+2行，共M行，每行四个数，q，L，R，P，若q为1则表示执行操作2，否则为执行操作1第4行，两个正整数l，r",
      "输出描述：": "一个正整数，为a[l]-a[r]内的元素之和"
    },
    "PositiveTags": "枚举,前缀和",
    "TimeLimit": "C/C++ 2秒，其他语言4秒",
    "SpaceLimit": "C/C++ 32768K，其他语言65536K",
    "Input": "10 5\n1 2 3 4 5 6 7 8 9 10\n1 1 5 5\n1 2 3 6\n0 2 5 5 \n0 2 5 8\n1 4 9 6\n2 7",
    "Output": "23"
  },
  "51": {
    "questionNum": "NC17360",
    "questionTitle": "鲲\n            ",
    "difficulty": "715",
    "content": {
      "题目描述：": "北冥有鱼，其名为鲲，鲲之大，不知其几千里也。 ——《庄子·逍遥游》 HtBest有一条可爱的小鲲，HtBest想和与小鲲比赛游泳，我们可以把游泳池看成一个圆环，两人从起点游一圈回到起点即可完成比赛。两人在距离小于k时（距离指的是在环上的距离，而非直线距离），他们会互相监督对方有没有全速向前游，如果发现有一方没有全速向前游，则视为作弊，聪明的HtBest为了省力（更为了赢得比赛），可以选择在两者相距超过k的时候，立马掉头反向游以更快到达起点，HtBest想让你求出小鲲最少比HtBest提前多长时间完成比赛。（若HtBest比小鲲先完成比赛，输出负数） 说明：小鲲不会作弊。",
      "输入描述：": "一行，包含四个正整数，两两之间用空格分开：L(游泳池周长)、k(互相监督距离)、a(小鲲速度)、b(HtBest速度)。所有输入数据均不超过1e9。",
      "输出描述：": "一行，包含一个数，表示小鲲最少比HtBest提前多长时间完成比赛。（保留两位小数）。"
    },
    "PositiveTags": "思维",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "4 3 2 1",
    "Output": "2.00"
  },
  "52": {
    "questionNum": "NC17361",
    "questionTitle": "鹏\n            ",
    "difficulty": "3105",
    "content": {
      "题目描述：": "化而为鸟，其名为鹏。鹏之背，不知其几千里也。——《庄子·逍遥游》HtBest的小鲲长大变成了大鹏，大鹏在天际翱翔，看到了一片绵延的山脉，每座山都有自己的高度，大鹏想穿过这片山脉。由于他只能紧贴地面飞行，他想知道他一共要翻越几次大山（上升->平飞->下降，算一次，其中平飞可以没有），初始时，大鹏在山脉的左端。",
      "输入描述：": "第一行一个正整数n，表示山脉被分为n段。第二行有n个正整数ai两两之间用空格分开，ai表示山脉第i段的高度。",
      "输出描述：": "一行，包含一个正整数，表示大鹏需要翻越几次大山。"
    },
    "PositiveTags": "模拟,枚举",
    "TimeLimit": "C/C++ 2秒，其他语言4秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "3\n1 2 1",
    "Output": "1"
  },
  "53": {
    "questionNum": "NC17362",
    "questionTitle": "桃花\n            ",
    "difficulty": "645",
    "content": {
      "题目描述：": "桃花一簇开无主，可爱深红映浅红。 ——《题百叶桃花》 桃花长在桃树上，树的每个节点有一个桃花，调皮的HtBest想摘尽可能多的桃花。HtBest有一个魔法棒，摘到树上任意一条链上的所有桃花，由于HtBest法力有限，只能使用一次魔法棒，请求出Htbest最多可以摘到多少个桃花。",
      "输入描述：": "第一行有一个正整数n，表示桃树的节点个数。接下来n-1行，第i行两个正整数ai,bi ，表示桃树上的节点ai,bi之间有一条边。",
      "输出描述：": "第一行一个整数，表示HtBest使用一次魔法棒最多可以摘到多少桃花。"
    },
    "PositiveTags": "数据结构,树,深度优先搜索(DFS),搜索",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "3\n1 2\n2 3",
    "Output": "3"
  },
  "54": {
    "questionNum": "NC17363",
    "questionTitle": "字符串丝带\n            ",
    "difficulty": "1332",
    "content": {
      "题目描述：": "WHZ送给了HtBest一个“字符串丝带”，这条丝带由n个小写字母按照一定的顺序排列组成，HtBest收到新礼物后有许多问题，类似“第i个位置的字母在前i个位置中出现了几次？”，HtBest很希望知道答案，于是求助你帮忙解答。",
      "输入描述：": "第一行有2个正整数n，m，分别表示丝带长度和问题个数。第二行，有n个小写字母，第i个表示丝带第i位的小写字母。接下来有m行，每行一个正整数 ，表示HtBest的一个问题。",
      "输出描述：": "共m行，对于每个问题，给出答案。"
    },
    "PositiveTags": "模拟",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 65536K，其他语言131072K",
    "Input": "3 3\nabc\n1\n2\n3",
    "Output": "1\n1\n1"
  },
  "55": {
    "questionNum": "NC17364",
    "questionTitle": "对弈\n            ",
    "difficulty": "185",
    "content": {
      "题目描述：": "善弈者谋势，不善弈者谋子。 ——《弈林新编》 蒟蒻HtBest与神犇WHZ下棋（五子棋），HtBest执黑棋，WHZ执白棋。由于HtBest天资愚笨，不会判断输赢，所以需要你帮他开发一个判断五子棋输赢的程序。",
      "输入描述：": "第一行有2个正整数n，m，分别表示棋盘大小（n*n）和对弈步数。接下来m行，每行两个正整数xi,yi ，表示对弈者下棋的坐标，第2、4、6…行是HtBest下的棋子，第3、5、7…行是WHZ下的棋子。",
      "输出描述：": "第一行一个字符串s 和一个正整数num ，用空格隔开，分别表示对弈的胜负结果和该结果出现时的步数，如果HtBest胜则s=“HtBest”，num为HtBest胜利时的步数（为偶数），如果WHZ胜则s=“WHZ”，num为WHZ胜利时的步数（为奇数），如果对弈m步后胜负仍未定，则s=“UNK”，num=m。提示：当棋盘上第一次有五个子连续排列（横竖斜都可）时，胜负已定。在这之后，两人有可能仍继续落子。"
    },
    "PositiveTags": "模拟",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "10 20\n1 1\n1 2\n2 1\n2 2\n3 1\n3 2\n4 1\n4 2\n5 1\n5 2\n6 1\n6 2\n7 1\n7 2\n8 1\n8 2\n9 1\n9 2\n10 1\n10 2",
    "Output": "HtBest 9"
  },
  "56": {
    "questionNum": "NC17507",
    "questionTitle": "发电\n            ",
    "difficulty": "340",
    "content": {
      "题目描述：": "HA实验是一个生产、提炼“神力水晶”的秘密军事基地，神力水晶可以让机器的工作效率成倍提升。 HA实验基地有n台发电机，标号为1-n，每台发电机的发电效率为1。 为了满足基地的用电需求，HtBest会在某台发电机上镶嵌一个等级为i的神力水晶，该发电机的发电效率是镶嵌神力水晶之前的i倍，一个发电机可以同时镶嵌多个神力水晶。 但是神力水晶有时还有别的用处，HtBest会拆掉某台发电机之前镶嵌上的一个神力水晶（设等级为i），发电机效率降为拆掉神力水晶前的1/i。 HtBest有时想知道第l到r台发电机的总发电效率为多少。",
      "输入描述：": "第一行有2个正整数n，m，分别表示发电机数量和操作数。接下来m行，每行有3个正整数，x, y, z。x=1时，HtBest镶嵌为第y台发电机镶嵌了一个等级为z的神力水晶，x=2时，HtBest为第y台发电机拆掉了一个等级为z的神力水晶，x=3时，HtBest想知道[y,z]的发电机效率的乘积。",
      "输出描述：": "对于每个x=3的操作，输出一行，表示[y,z]的发电机的效率的乘积。由于输出过大，你需要对输出结果模1000000007（1e9+7）。"
    },
    "PositiveTags": "逆元,数据结构,树状数组,数论",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "4 4\n1 2 3\n3 1 4\n2 2 3\n3 1 4",
    "Output": "3\n1"
  },
  "57": {
    "questionNum": "NC17508",
    "questionTitle": "指纹锁\n            ",
    "difficulty": "1465",
    "content": {
      "题目描述：": "HA实验有一套非常严密的安全保障体系，在HA实验基地的大门，有一个指纹锁。 该指纹锁的加密算法会把一个指纹转化为一个不超过1e7的数字，两个指纹数值之差越小，就说明两个指纹越相似，当两个指纹的数值差≤k时，这两个指纹的持有者会被系统判定为同一个人。 现在有3种操作，共m个， 操作1：add x，表示为指纹锁录入一个指纹，该指纹对应的数字为x，如果系统内有一个与x相差≤k的指纹，则系统会忽略这次添加操作 操作2：del x，表示删除指纹锁中的指纹x，若指纹锁中多个与x相差≤k的指纹，则全部删除，若指纹锁中没有指纹x，则可以忽略该操作， 操作3：query x，表示有一个持有指纹x的人试图打开指纹锁，你需要设计一个判断程序，返回该人是否可以打开指纹锁（只要x与存入的任何一个指纹相差≤k即可打开锁）。 初始状态，指纹锁中没有任何指纹。",
      "输入描述：": "第一行有2个正整数m，k。接下来m行，每行描述一种操作：add x，del x或query x。",
      "输出描述：": "对于每个query操作，输出一行，包含一个单词“Yes”或“No”，表示该人是否可以打开指纹锁。"
    },
    "PositiveTags": "数据结构,STL,字符串",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "4 3\nadd 1\nadd 10\nquery 5\nquery 4",
    "Output": "No\nYes"
  },
  "58": {
    "questionNum": "NC17509",
    "questionTitle": "挖沟\n            ",
    "difficulty": "2141",
    "content": {
      "题目描述：": "胡队长带领HA实验的战士们玩真人CS，真人CS的地图由一些据点组成，现在胡队长已经占领了n个据点，为了方便，将他们编号为1-n，为了隐蔽，胡队长命令战士们在每个据点出挖一个坑，让战士们躲在坑里。由于需要在任意两个点之间传递信息，两个坑之间必须挖出至少一条通路，而挖沟是一件很麻烦的差事，所以胡队长希望挖出数量尽可能少的沟，使得任意两个据点之间有至少一条通路，顺便，尽可能的∑d[i][j]使最小（其中d[i][j]为据点i到j的距离）。",
      "输入描述：": "第一行有2个正整数n，m，m表示可供挖的沟数。接下来m行，每行3个数a,b,v，每行描述一条可供挖的沟，该沟可以使a与b连通，长度为v。",
      "输出描述：": "输出一行，一个正整数，表示要使得任意两个据点之间有一条通路，至少需要挖长的沟。（数据保证有解）"
    },
    "PositiveTags": "图论,生成树",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "2 2\n1 2 1\n1 2 3",
    "Output": "1"
  },
  "59": {
    "questionNum": "NC17510",
    "questionTitle": "洋灰三角\n            ",
    "difficulty": "338",
    "content": {
      "题目描述：": "洋灰是一种建筑材料，常用来筑桥搭建高层建筑，又称，水泥、混凝土。 WHZ有很多铸造成三角形的洋灰块，他想把这些洋灰三角按照一定的规律放到摆成一排的n个格子里，其中第i个格子放入的洋灰三角数量是前一个格子的k倍再多p个，特殊地，第一个格子里放1个。 WHZ想知道把这n个格子铺满需要多少洋灰三角。",
      "输入描述：": "第一行有3个正整数n，k，p。",
      "输出描述：": "输出一行，一个正整数，表示按照要求铺满n个格子需要多少洋灰三角，由于输出数据过大，你只需要输出答案模1000000007(1e9+7)后的结果即可。"
    },
    "PositiveTags": "数学,快速幂",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "3 1 1",
    "Output": "6"
  },
  "60": {
    "questionNum": "NC17511",
    "questionTitle": "公交线路\n            ",
    "difficulty": "1995",
    "content": {
      "题目描述：": "P市有n个公交站，之间连接着m条道路。P市计划新开设一条公交线路，该线路从城市的东站（s点）修建到西站（t点），请为P市设计一条满足上述条件并且最短的公交线路图。",
      "输入描述：": "第一行有4个正整数n，m，s，t。接下来m行，每行3个数a,b,v描述一条无向道路a——b，长度为v。",
      "输出描述：": "如果有解，输出一行，表示满足条件的最短公交线路的长度c。否则，输出“-1”"
    },
    "PositiveTags": "图论,最短路",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "3 3 1 2\n1 2 3\n2 3 4\n1 3 5",
    "Output": "3"
  },
  "61": {
    "questionNum": "NC17864",
    "questionTitle": "送分题\n            ",
    "difficulty": "1565",
    "content": {
      "题目描述：": "做水题就是在浪费时间，但是一场比赛要是没有送分的签到题，大家的比赛体验就会很差。为了优化你的比赛体验又不浪费你的读题时间，我并不打算给你很复杂的故事背景，你只需要复制下面的代码并选择正确的语言提交即可通过此题。 #include<iostream>\nusing namespace std;\nlong long f(long long n)\n $\n  if (n < 20180001) return n + 2017;\n  return f(f(n - 2018));\n$ \nint main()\n $\n  long long n;\n  cin >> n;\n  cout << f(n) << endl;\n  return 0;\n$",
      "输入描述：": "#include<iostream>\nusing namespace std;\nlong long f(long long n)\n $\n  if (n < 20180001) return n + 2017;\n  return f(f(n - 2018));\n$ \nint main()\n $\n  long long n;\n  cin >> n;\n  cout << f(n) << endl;\n  return 0;\n$",
      "输出描述：": "输入一个整数n。(1 ≤ n ≤ 1018)"
    },
    "PositiveTags": "语言题",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 32768K，其他语言65536K",
    "Input": "20182017",
    "Output": "20182017"
  },
  "62": {
    "questionNum": "NC17865",
    "questionTitle": "炸弹游戏\n            ",
    "difficulty": "329",
    "content": {
      "题目描述：": "Alice和Bob相约一起玩一个炸弹游戏。游戏开始时，Alice手上拿着一个定时炸弹，炸弹有个倒计时t。炸弹在t=0时刻会爆炸，此时手上拿着炸弹的人就输了。为了增加游戏乐趣，他们约定每个人拿到炸弹后可以选择将炸弹的时间调快d秒(d ∈ [a,b])，或者不调。每次交换炸弹会消耗1秒（假设调节炸弹时间不需要消耗时间）。问题来了，如果双方都足够聪明，谁会赢呢？",
      "输入描述：": "第一行有三个整数t,a,b，分别表示炸弹初始时刻的倒计时，可调节时间的范围。(0 ≤ t ≤ 105,1 ≤ a ≤ b ≤ 10)",
      "输出描述：": "若Alice赢则输出\"Alice\"，若Bob赢则输出\"Bob\"。"
    },
    "PositiveTags": "数学,博弈论,递推,动态规划,记忆化搜索",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 32768K，其他语言65536K",
    "Input": "6 3 4",
    "Output": "Alice"
  },
  "63": {
    "questionNum": "NC17866",
    "questionTitle": "谁是神射手\n            ",
    "difficulty": "1012",
    "content": {
      "题目描述：": "有一天，MWH突然来了兴致，想和CSL比比谁枪法好。于是他们找来了一个瓶子，比比看谁先打中这个瓶子。 给定MWH的命中率和CSL的命中率。 两人轮流射击，MWH先手，问谁获胜的概率大？",
      "输入描述：": "输入两个整数和，表示MWH和CSL的命中率。.",
      "输出描述：": "若MWH获胜的概率大，则输出\"MWH\"。 若CSL获胜的概率大，则输出\"CSL\"，否则输出\"equal\"。"
    },
    "PositiveTags": "数学,概率期望",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 32768K，其他语言65536K",
    "Input": "100 100",
    "Output": "MWH"
  },
  "64": {
    "questionNum": "NC17867",
    "questionTitle": "明七暗七\n            ",
    "difficulty": "356",
    "content": {
      "题目描述：": "今天是个特殊的日子，CSL和他的小伙伴们围坐在一张桌子上玩起了明七暗七的游戏。游戏规则是这样的：一个人报出一个起始数，接下来按照逆时针的顺序轮流报数，如果碰到数是7的倍数或含有7，则拍手，下一个人接着报数。直到有一个人报错了数字或者没有及时拍手为止。玩游戏嘛，当然得有惩罚。这么简单的游戏对CSL的学霸小伙伴而言实在是太无脑了，轻轻松松数到上万根本不在话下。但是对于数学是体育老师教的CSL来说，实在是太难了。快帮他算算什么时候应该拍手吧。",
      "输入描述：": "输入两个整数m和n。(1 ≤ m, n ≤ 1012)",
      "输出描述：": "输出一个整数，表示m以后第n个需要拍手的数字。"
    },
    "PositiveTags": "动态规划",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 32768K，其他语言65536K",
    "Input": "30 7",
    "Output": "57"
  },
  "65": {
    "questionNum": "NC17868",
    "questionTitle": "Applese的超能力\n            ",
    "difficulty": "1137",
    "content": {
      "题目描述：": "Applese有个神奇的能力，TA可以把m个硬币融合成1个硬币，是不是很厉害。现在Applese有n个硬币，TA想把这个n个硬币融合成1个，请问他能完成吗?",
      "输入描述：": "输入两个整数n,m(1 ≤ n, m ≤ 109)",
      "输出描述：": "如果Applese能完成,输出\"Yes\"，否则输出\"No\"。"
    },
    "PositiveTags": "思维",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 32768K，其他语言65536K",
    "Input": "10 7",
    "Output": "No"
  },
  "66": {
    "questionNum": "NC17870",
    "questionTitle": "BFS\n            ",
    "difficulty": "2919",
    "content": {
      "题目描述：": "Bob在学习了DFS后，自己又发明了一种新的搜(luan)索(gao)方法，叫做BFS(Bobby First Search)。这种搜索被定义为：在一个字符串中，从前向后查找第一个子串\"Bob\"出现的位置。（不区分大小写）",
      "输入描述：": "输入一个不含空格的字符串S（可能含有大小写字母，数字）。(1 ≤ |S| ≤ 100)",
      "输出描述：": "输出一个数字，表示\"Bob\"第一次出现的位置（下标从0开始）。如果没有出现，则输出\"-1\"。"
    },
    "PositiveTags": "数据结构,STL,暴力",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 32768K，其他语言65536K",
    "Input": "Bobob",
    "Output": "0"
  },
  "67": {
    "questionNum": "NC17871",
    "questionTitle": "CSL分苹果\n            ",
    "difficulty": "1480",
    "content": {
      "题目描述：": "CSL手上有n个苹果，第i个苹果的质量是wi，现在他想把这些苹果分给他的好朋友wavator和tokitsukaze。但是CSL为了不让他们打架，根据质量决定尽量地均分成两堆分给他们。现在CSL想知道到底给每个人分多少质量的苹果。注意：苹果不能劈开来，并且如果不能正好均分，tokitsukaze小姐姐会拿到重的那一堆。",
      "输入描述：": "第一行输入一个整数n(2 ≤ n ≤ 100)，第二行n个整数，表示每个苹果的质量wi(1 ≤ wi ≤ 100)。",
      "输出描述：": "输出两个整数，分别表示wavator和tokitsukaze得到的苹果的质量。"
    },
    "PositiveTags": "背包问题,动态规划",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 32768K，其他语言65536K",
    "Input": "3\n2 2 2",
    "Output": "2 4"
  },
  "68": {
    "questionNum": "NC17872",
    "questionTitle": "CSL的校园卡\n            ",
    "difficulty": "213",
    "content": {
      "题目描述：": "今天是阳光明媚，晴空万里的一天，CSL早早就高兴地起床走出寝室到校园里转悠。但是，等到他回来的时候，发现他的校园卡不见了，于是他需要走遍校园寻找它的校园卡。CSL想要尽快地找回他掉的校园卡，于是便求助于OneDay帮他一起找。OneDay和CSL在同一已知的地点出发，并以相同的速度（1格/秒）搜索校园，试求两人走遍校园的最短时间。",
      "输入描述：": "第一行为两个整数n,m(1 ≤ n, m ≤ 4)，表示地图的大小。接下来是n行m列的地图：X表示障碍物，S表示起点，O表示空地。障碍物不能直接经过，数据保证所有空地是可达的，起点有且只有一个。",
      "输出描述：": "输出一个整数表示两人共同走遍校园所需的最少时间。"
    },
    "PositiveTags": "广度优先搜索(BFS),搜索",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "3 4\nXSOO\nOOXO\nOOOO",
    "Output": "5"
  },
  "69": {
    "questionNum": "NC17889",
    "questionTitle": "新建 Microsoft Office Word 文档\n            ",
    "difficulty": "1253",
    "content": {
      "题目描述：": "CSL正在学习《计算机办公自动化》文件的建立与删除。CSL发现，当他新建一个word文档时，会得到一个名为\"新建 Microsoft Office Word 文档.doc\"的文件，再新建一个，则名为\"新建 Microsoft Office Word 文档(2).doc\"，再新建，便是\"新建 Microsoft Office Word 文档(3).doc\"。不断新建，编号不断递增。倘若他已经新建了三个文档，然后删除了\"新建 Microsoft Office Word 文档(2).doc\"，再新建一个就又会得到一个\"新建 Microsoft Office Word 文档(2).doc\"。严格来说，Windows在每次新建文档时，都会选取一个与已有文件编号不重复的最小正整数作为新文档的编号。现在，请你编程模拟以上过程，支持以下两种操作：New：新建一个word文档，反馈新建的文档的编号；Delete id：删除一个编号为id的word文档，反馈删除是否成功。初始时一个文件都没有，\"新建 Microsoft Office Word 文档.doc\"的编号算作1。",
      "输入描述：": "第一行一个正整数n表示操作次数，接下来n行，每行表示一个操作。若该行为\"New\"，则表示新建，为:Delete id\"则表示要删除编号为id的文档，其中id为一个正整数。操作按输入顺序依次进行。操作次数不超过100000，删除编号的数值不超过100000。",
      "输出描述：": "对于输入的每一个操作，输出其反馈结果。对于新建操作，输出新建的文档的编号；对于删除操作，反馈删除是否成功：如果删除的文件存在，则删除成功，输出\"Successful\"，否则输出\"Failed\"。"
    },
    "PositiveTags": "数据结构,堆/优先队列,模拟",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 32768K，其他语言65536K",
    "Input": "12\nNew\nNew\nNew\nDelete 2\nNew\nDelete 4\nDelete 3\nDelete 1\nNew\nNew\nNew\nDelete 4",
    "Output": "1\n2\n3\nSuccessful\n2\nFailed\nSuccessful\nSuccessful\n1\n3\n4\nSuccessful"
  },
  "70": {
    "questionNum": "NC17890",
    "questionTitle": "方格填色\n            ",
    "difficulty": "409",
    "content": {
      "题目描述：": "给一个m x n的方格，Applese想要给方格填上颜色，每个格子可以是黑色或者白色。他要求左右相邻两格不能同为白色且相邻两列不能全为黑色。求满足条件的方案数。",
      "输入描述：": "输入两个整数m, n。(1 ≤ m ≤ 5, 1 ≤ n ≤ 1018)。",
      "输出描述：": "输出答案对109 + 7取模的结果。"
    },
    "PositiveTags": "状压dp,动态规划",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 32768K，其他语言65536K",
    "Input": "3 1",
    "Output": "8"
  },
  "71": {
    "questionNum": "NC19422",
    "questionTitle": "数列操作\n            ",
    "difficulty": "335",
    "content": {
      "题目描述：": "duancaicai是个蒟蒻,她经常会在学校机房里刷题,也会被同校的dalao们虐,有一次,她想出了一个毒瘤数据结构,便兴冲冲的把题面打了出来,她觉得自己能5s内切掉就很棒了,结果yixingstd过来一看,说:\"这思博题不是1s就能切掉嘛\",duancaicai觉得自己的信心得到了打击,你能帮她在1s中切掉这道水题嘛?\n\n你需要写一个毒瘤(划掉)简单的数据结构,满足以下操作\n1.插入一个数x(insert)\n2.删除一个数x(delete)(如果有多个相同的数,则只删除一个)\n3.查询一个数x的排名(若有多个相同的数，就输出最小的排名)\n4.查询排名为x的数\n5.求一个数x的前驱\n6.求一个数x的后继",
      "输入描述：": "第一行,输入一个整数n,表示接下来需要输入n行接下来n行,输入 一个整数num和一个整数x",
      "输出描述：": "当num为3,4,5,6时,输出对应的答案"
    },
    "PositiveTags": "动态规划,数位dp",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 131072K，其他语言262144K",
    "Input": "8\n1 10\n1 20\n1 30\n3 20\n4 2\n2 10\n5 25\n6 -1",
    "Output": "2\n20\n20\n20"
  },
  "72": {
    "questionNum": "NC19423",
    "questionTitle": "div.2 A\n            ",
    "difficulty": "30",
    "content": {
      "题目描述：": "定义 f(n,k) 表示将 n 拆分成 k 个有序正整数乘积的方案数。给定 n,k，，求 f第一行两个正整数 n,k 。(i,k) 。举个例子，假设要求 f(4,3) ，因为所以 f(4,3)=6 。",
      "输入描述：": "第一行两个正整数 n,k 。",
      "输出描述：": "设，且gi ≥ 0，且gi尽可能的小设你只需要输出T就行了"
    },
    "PositiveTags": "筛法,数论",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "4 3",
    "Output": "11"
  },
  "73": {
    "questionNum": "NC19424",
    "questionTitle": "给给\n            ",
    "difficulty": "31",
    "content": {
      "题目描述：": "给定一棵树，一共执行k次操作，每次随机选择两个点，并将它们这条唯一路径上的点都染上色 求所有操作结束后被染上色的点的个数的期望值 答案对109+7取模 注：选择的两个点是无序地选择的，(1,2) 和 (2,1) 是同一个方案。",
      "输入描述：": "第一行两个整数n,k之后n-1行，每行两个整数u,v，表示u,v之间有一条边相连",
      "输出描述：": "一行一个整数表示答案"
    },
    "PositiveTags": "数学,概率期望,深度优先搜索(DFS),搜索",
    "TimeLimit": "C/C++ 5秒，其他语言10秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "2 1\n1 2",
    "Output": "333333337"
  },
  "74": {
    "questionNum": "NC19425",
    "questionTitle": "论如何出一道水题\n            ",
    "difficulty": "1817",
    "content": {
      "题目描述：": "给定 n，求一对整数 (i,j)，在满足 1 ≤ i ≤ j ≤ n 且的前提下，要求最大化 i+j 的值",
      "输入描述：": "第一行一个整数 n",
      "输出描述：": "一行一个整数表示答案"
    },
    "PositiveTags": "数学",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "2",
    "Output": "3"
  },
  "75": {
    "questionNum": "NC19426",
    "questionTitle": "简单\n            ",
    "difficulty": "18",
    "content": {
      "题目描述：": "给定一个森林，每个点都有一定概率会消失，一条的边存在的条件是，u 存在且 v 存在。 有若干次询问，每次给定 [l,r]，然后把下标不在 [l,r] 的点都删掉后，问剩余点和所有边构成的图的连通块个数的期望。 注意每次删除的意思是只在当前这个询问的时候删除，对于其它询问互相独立",
      "输入描述：": "第一行三个整数 n,m,q，分别表示点的个数和边的个数和询问次数。之后 n 行，第 i+1 行有两个整数 ai,bi，表示第 i 个点存在的概率是。之后 m 行，每行有两个整数 u,v，表示存在一条连接 u 和 v 的边，保证无重边无自环。之后 q 行，每行两个整数 [l,r]，表示一次询问。",
      "输出描述：": "对于每一次询问，输出一行一个整数表示答案，输出对 109+7 取模。"
    },
    "PositiveTags": "数据结构,树套树,主席树",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "2 1 1\n1 1\n1 1\n1 2\n1 2",
    "Output": "1"
  },
  "76": {
    "questionNum": "NC19427",
    "questionTitle": "换个角度思考\n            ",
    "difficulty": "819",
    "content": {
      "题目描述：": "给定一个序列，有多次询问，每次查询区间里小于等于某个数的元素的个数 即对于询问 (l,r,x)，你需要输出的值 其中 [exp] 是一个函数，它返回 1 当且仅当 exp 成立，其中 exp 表示某个表达式",
      "输入描述：": "第一行两个整数n,m第二行n个整数表示序列a的元素，序列下标从1开始标号，保证1 ≤ ai ≤ 105之后有m行，每行三个整数(l,r,k)，保证1 ≤ l ≤ r ≤ n，且1 ≤ k ≤ 105",
      "输出描述：": "对于每一个询问，输出一个整数表示答案后回车"
    },
    "PositiveTags": "数据结构,线段树",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "5 1\n1 2 3 4 5\n1 5 3",
    "Output": "3"
  },
  "77": {
    "questionNum": "NC19428",
    "questionTitle": "树上求和\n            ",
    "difficulty": "298",
    "content": {
      "题目描述：": "给你一棵根为1的有N个节点的树，以及Q次操作。 每次操作诸如: 1 x y：将节点x所在的子树的所有节点的权值加上y 2 x：询问x所在子树的所有节点的权值的平方和，答案模23333后输出",
      "输入描述：": "第一行两个整数N,Q第二行N个整数，第i个表示节点i的初始权值接下来N-1行每行两个整数u,v，表示u和v之间存在一条树边接下来Q行每行一个操作，格式如题目描述",
      "输出描述：": "对于每个询问操作，输出一行一个整数，表示答案在模23333后的结果"
    },
    "PositiveTags": "数据结构,线段树,树链剖分",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "5 5\n0 0 0 0 0\n1 2\n1 3\n3 4\n3 5\n1 1 3\n1 3 7\n1 4 5\n1 5 6\n2 1",
    "Output": "599"
  },
  "78": {
    "questionNum": "NC19429",
    "questionTitle": "红球进黑洞\n            ",
    "difficulty": "404",
    "content": {
      "题目描述：": "在心理疏导室中有一种奇特的疏导工具，叫做红球。红球被提前分为了许多正方形小方格。 每当有人来找ATB做心理疏导时，ATB就会让他去先玩红球，然后通过红球小格方的高度来判断一个人的压力程度的高低 具体地讲，ATB会让该人对于一个序列执行以下操作 1. 区间求和，即输入l,r，输出 2. 区间异或，即输入l,r,k，对于l ≤ i ≤ r，将xi变为 可是ATB天天算计那么多答案，已经对这份工作产生了厌烦，所以请你帮帮他，对于一组给定的数据，输出对应的答案 ATB会将你感谢到爆",
      "输入描述：": "第一行两个整数n和m,表示数列长度和询问次数第二行有n个整数,表示这个数列的初始数值接下来有m行,形如 1 l r或者 2 l r k分别表示查询或者对于l ≤ i ≤ r，将xi变为",
      "输出描述：": "对于每一个查询操作,输出查询的结果并换行"
    },
    "PositiveTags": "数据结构,线段树",
    "TimeLimit": "C/C++ 3秒，其他语言6秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "10 10\n8 5 8 9 3 9 8 3 3 6 \n2 1 4 1\n1 2 6 \n2 9 10 8\n1 1 7 \n2 4 7 8\n2 8 8 6\n2 2 3 0\n1 1 2 \n2 9 10 4\n1 2 3",
    "Output": "33\n50\n13\n13"
  },
  "79": {
    "questionNum": "NC19430",
    "questionTitle": "法法\n            ",
    "difficulty": "910",
    "content": {
      "题目描述：": "设 A 是一个的排列，其中第 i 项为 Ai设 换句话说：求的全排列的 f 的和答案对 2 取模",
      "输入描述：": "第一行输入一个整数 T，表示数据组数之后 T 行，第 i+1 行有一个整数 ni，表示第 i 次询问",
      "输出描述：": "一共 T 行，第 i 行有 1 个整数，表示第 i 次询问的答案"
    },
    "PositiveTags": "数学",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "1\n3",
    "Output": "0"
  },
  "80": {
    "questionNum": "NC19431",
    "questionTitle": "切题之路\n            ",
    "difficulty": "361",
    "content": {
      "题目描述：": "众所周知,SD省有一个可爱的妹子,叫做rqy(rqy天下第一可爱!不接受反驳,抱走rqy~),她经常(雾)和一个叫做clccle的蒟蒻一起刷题,但是因为clccle太弱了,所以说她会跳过难度较高的题目,同时，如果clccle的时间不足以切掉当前这道简单题，那么她同时也会跳过这道简单题目，相对的,rqy要花掉两倍的时间去切掉一道难度较高的题目,但如果时间不够用，她会跳过这道题目，但是有一个特殊规定,因为她们两个人都非常懒,所以她们只会按给定的顺序刷,现在两人的刷题列表是一样的,请求出在给定时间里clccle和rqy各最多能刷多少道题目。",
      "输入描述：": "第一行,两个整数n,t,表示有n道题目,给定的时间为t第二行 两个整数a,b 分别表示clccle所认为的难度较高和rqy认为的难度较高接下来两行,每行n个数字 第一行表示切题所需的时间，第二行表示题目的难度",
      "输出描述：": "输出两个整数,分别表示clccle和rqy的切题数"
    },
    "PositiveTags": "模拟",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 32768K，其他语言65536K",
    "Input": "2 100\n6 10\n100 10\n7 5",
    "Output": "1 1"
  },
  "81": {
    "questionNum": "NC19434",
    "questionTitle": "签到\n            ",
    "difficulty": "406",
    "content": {
      "题目描述：": "你在一栋楼房下面，楼房一共有n层，第i层每秒有pi的概率会扔下一个东西并砸到你 求第一秒内你被砸到的概率",
      "输入描述：": "第一行一个整数n之后有n行，第i+1行有两个整数ai,bi，表示",
      "输出描述：": "设答案为，你只需要找到一个最小的非负整数T，使得输出这个T就行了"
    },
    "PositiveTags": "数学,概率期望",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "2\n1 2\n1 2",
    "Output": "750000006"
  },
  "82": {
    "questionNum": "NC19437",
    "questionTitle": "暴力出奇迹\n            ",
    "difficulty": "168",
    "content": {
      "题目描述：": "给定一个序列，寻找一对l,r，满足1 ≤ l ≤ r ≤ n 最大化的值 其中表示将al,al+1, ... , ar按位与后的结果",
      "输入描述：": "第一行一个整数n,表示数列长度.第二行有n个整数,表示这个数列的初始数值.",
      "输出描述：": "一行一个整数表示答案."
    },
    "PositiveTags": "枚举,思维",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 524288K，其他语言1048576K",
    "Input": "10\n7 9 9 4 0 0 8 8 4 7",
    "Output": "162"
  },
  "83": {
    "questionNum": "NC19840",
    "questionTitle": "勘测\n            ",
    "difficulty": "572",
    "content": {
      "题目描述：": "Actci偶然发现了一个矿洞，这个矿洞的结构类似与一棵二叉树，Actci发现的矿洞恰好位于根节点处，为了尽快挖掘，Actci找来了她的小伙伴们来帮忙，由于地质原因，每天小伙伴们只能打通到一条到子节点的道路(不消耗时间)，也就是说每天一个节点只能向一个子节点建设道路，走一条路需要一天的时间，当发现一条道路后，会有一部分小伙伴选择留下来继续勘测，假设小伙伴们有无数个，树的深度足够大，问第n天最多共建设几条道路。",
      "输入描述：": "一行，一个数n。",
      "输出描述：": "一行，一个数表示最多建设的道路数，答案对 10000000007 取模。"
    },
    "PositiveTags": "数学",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 131072K，其他语言262144K",
    "Input": "2",
    "Output": "3"
  },
  "84": {
    "questionNum": "NC19841",
    "questionTitle": "数学\n            ",
    "difficulty": "841",
    "content": {
      "题目描述：": "某年某月某天的数学课上，Actci正在遨游宇宙呢，对于他的屡教不改，她的数学老师决定难为一下Actci，将他叫醒。 “咳咳，我现在给出一个数a()，判断a是否是3,5,8,11中某些数的的倍数，你只有一秒钟的时间，答不上来的话，呵，%#W$%@#$@...”。 作为他后桌的你怎么能看着Actci“受害”呢，于是你决定帮帮他。",
      "输入描述：": "一行，一个数 a。",
      "输出描述：": "两行。第一行输出 Yes 或 No，表示这个数是否是这四个数中一个或几个数的倍数。第二行，a是哪些数的倍数，每个数用空格隔开(顺序从小到大)，若第一行为 No 则不用输出。"
    },
    "PositiveTags": "暴力",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 32768K，其他语言65536K",
    "Input": "123456789",
    "Output": "Yes\n3"
  },
  "85": {
    "questionNum": "NC19842",
    "questionTitle": "约数\n            ",
    "difficulty": "880",
    "content": {
      "题目描述：": "Actci上课睡了一觉，下课屁颠屁颠的去找数学老师补课，问了老师一个题目：  给出两个数a,b，问a和b的全部公约数是什么？ 数学老师一看这道题太简单了，不屑回答，于是就交给了你。",
      "输入描述：": "一行两个数a，b.",
      "输出描述：": "a和b的全部公约数，每个数字之间空格隔开。"
    },
    "PositiveTags": "gcd与exgcd,数论",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 32768K，其他语言65536K",
    "Input": "25 37",
    "Output": "1"
  },
  "86": {
    "questionNum": "NC20640",
    "questionTitle": "迷之盒子\n            ",
    "difficulty": "35",
    "content": {
      "题目描述：": "在clccle的面前有很多盒子,他给qy和qn准备了m颗糖果想放到这些盒子里面,盒子的最大容量是k,但是她想到了一个坏主意,就是可以有些盒子里面没有糖果,让qy和qn打开之后非常失落,现在请你求出一共有多少种方法放置这些糖果?",
      "输入描述：": "一行,三个整数,n,m,k其中n为盒子的个数m,k所代表的请看题面",
      "输出描述：": "一行,一个整数,代表方法数，方法数对1e9+7取模"
    },
    "PositiveTags": "组合数学,卢卡斯定理",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 131072K，其他语言262144K",
    "Input": "5 2 1",
    "Output": "10"
  },
  "87": {
    "questionNum": "NC20642",
    "questionTitle": "病毒感染\n            ",
    "difficulty": "271",
    "content": {
      "题目描述：": "有一天clccle和rqy走在某个国家的街头上,机智的rqy却发现周围的行人不太对劲,他们嘴里念念有词,说着\"sqn tql!\",一边漫无目的的行走,clccle也发现了这一点,却惊讶的发觉这种奇怪的病毒会向周围的城市,最终会感染整个国家,因为网络已经崩溃,所以她们忘记了自己所在的城市,她们唯一知道的是这种病毒是从当前她们所在的城市开始传播的,并且这个国家的所有城市到这个城市的距离和最小（所有道路的距离都为1）,现在给定聪明的你一张整个国家的地图,请你帮rqy和clccle找到她们现在可能在这个国家的哪一个城市.",
      "输入描述：": "两个整数n,m,代表这个国家一共有n个城市,城市之间只有m条道路接下来m行,每行两个整数a,b代表城市a,b之间有一条联通的道路",
      "输出描述：": "多个整数,输出当前clccle和rqy可能所在的点"
    },
    "PositiveTags": "数据结构,树,搜索",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 131072K，其他语言262144K",
    "Input": "2 1\n1 2",
    "Output": "1 2"
  },
  "88": {
    "questionNum": "NC20668",
    "questionTitle": "红包期望\n            ",
    "difficulty": "576",
    "content": {
      "题目描述：": "众所周知,在过年的时候每家每户都会发红包,现在clccle和qn在一起抢*信红包,但是她们觉得这样没有意思,便开始了计算,如果当clccle和sqn为第k个抢红包的人时候,所抢到红包金额的期望是多少?(红包的大小在[0,2n/m]中均匀随机,特别的当红包的大小小于2n/m时,最后剩下的金额会被包入最后一个红包中)",
      "输入描述：": "第一行,三个整数,m,n,T分别表示有一个红包可以被m个人领取,而且红包的总金额是n,接下来有T次询问接下来T行,每行一个整数k,表示clccle和qn抢红包的时候是第几位",
      "输出描述：": "共T行每行一个整数,表示clccle和qn所得到的红包大小的期望"
    },
    "PositiveTags": "数学,概率期望",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "10 100 3\n10\n15\n16",
    "Output": "10\n0\n0"
  },
  "89": {
    "questionNum": "NC20669",
    "questionTitle": "诡异数字\n            ",
    "difficulty": "240",
    "content": {
      "题目描述：": "有一天clccle在家里玩手机,突然手机上出现了一个诡异的黑影,眼里闪烁着白光,发出了奇怪的声音(像是正常的声音倒放之后再正放的样子),clccle努力辨别后终于听懂了这个黑影在说什么,大概如下,给定你一个区间[l,r]和多个约束, 请你求出在这个区间内满足这个约束的数字个数(不含前导零),如果clccle不能在1s内求出这个答案,就会被送入一个奇怪的旅馆(Rusty Lake Hotel),因为clccle很害怕,请你帮她在1s之内求出这个答案",
      "输入描述：": "注意:此题有多组数据第一行,一个整数T,代表数据组数对于每组数据,有三个数字 l,r,n接下来n行，每行一个数字x，接下来一个数len表示数字x在数字串中连续出现的次数不能大于len",
      "输出描述：": "对于每组数据输出一个整数,表示l,r中满足约束的数字个数。(对20020219取模)"
    },
    "PositiveTags": "动态规划,数位dp",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 131072K，其他语言262144K",
    "Input": "2\n050 2\n4 1\n4 4\n0100 2\n4 1\n5 1",
    "Output": "50\n99"
  },
  "90": {
    "questionNum": "NC20699",
    "questionTitle": "路灯孤影\n            ",
    "difficulty": "29",
    "content": {
      "题目描述：": "clccle孤独地走在回家的路上，因为她已经知道可能要退役了，这时，她注意到路灯出了一些小问题，每盏路灯只有左边或者右边的灯亮着，没有被灯照亮的地方就会一片漆黑，因为clccle很怕黑，假设clccle能够调整路灯的朝向，你能告诉她最长的没有黑暗的一段路的长度是多少吗？",
      "输入描述：": "第一行，一个整数n接下来n行，每行一个整数l，r，表示路灯在l的位置上，且路灯最多能照亮r的长度",
      "输出描述：": "一个整数，表示最大的没有黑暗的长度"
    },
    "PositiveTags": "线性dp,动态规划",
    "TimeLimit": "C/C++ 2秒，其他语言4秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "3\n1 1\n2 2\n3 3",
    "Output": "5"
  },
  "91": {
    "questionNum": "NC20700",
    "questionTitle": "好的序列\n            ",
    "difficulty": "9",
    "content": {
      "题目描述：": "定义一个序列是好的，当且仅当它的所有元素的等于1。 定义函数fk(N) 表示长为 k的、每个元素是[1,N]范围内的正整数的所有Nk个序列中，好的序列的个数。 给定N, k，求：",
      "输入描述：": "两个整数N，k，含义见题面",
      "输出描述：": "一个整数，含义见题面"
    },
    "PositiveTags": "数学,莫比乌斯反演,数据结构,分块",
    "TimeLimit": "C/C++ 2秒，其他语言4秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "4 2",
    "Output": "22"
  },
  "92": {
    "questionNum": "NC20701",
    "questionTitle": "神秘钥匙\n            ",
    "difficulty": "1361",
    "content": {
      "题目描述：": "clccle一行𝑛个人来到了一个诡异的世界，她们需要去寻找逃出这个地方的方法——找到神秘的所罗门之匙 她们决定从中随机选出一些人去寻找钥匙，并在其中选出一个队长，clccle不想知道自己有多大几率被选中，她只想知道一共有多少种选择的方案 （选出的人数要在1−𝑛之间，不同的队长算不同的方案）。 方案数对1000000007取模",
      "输入描述：": "第一行，一个整数𝑛。",
      "输出描述：": "一个整数，表示方案数。"
    },
    "PositiveTags": "排列组合,组合数学",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 32768K，其他语言65536K",
    "Input": "2",
    "Output": "4"
  },
  "93": {
    "questionNum": "NC20702",
    "questionTitle": "机房网络\n            ",
    "difficulty": "3",
    "content": {
      "题目描述：": "TADYZ机房最近进行了一次整改。 机房中的电脑被排成了两排，每一排都有𝑛台电脑。我们现在对其标号，一 排依次标号为𝐴𝑖(𝑖 = 1,2,...,𝑛)，另一排依次标号为𝐵𝑗(𝑗 = 1,2,...,𝑛)。 它们之间通过网线进行连接，每一条网线都有一定的传输上限，并且只能进 行单向传输。对于每排中的电脑，𝐴𝑖向𝐴𝑖+1连边，𝐵𝑗向𝐵𝑗+1连边。另外有𝑚根网 线，连接𝐴𝑖与𝐵𝑗。 现在共有𝑄次操作，每次操作会修改某条从𝐴𝑖到𝐴𝑖+1的网线的容量上限，每 一次你都要求出修改后从𝐴1到𝐵𝑛的最大流量。",
      "输入描述：": "第一行，三个整数𝑛，𝑚，𝑄。接下来一行，𝑛 −1个数𝑎𝑖，表示𝐴𝑖到𝐴𝑖+1的网线容量为𝑎𝑖。接下来一行，𝑛 −1个数𝑏𝑗，表示𝐵𝑗到𝐵𝑗+1的网线容量为𝑏𝑗。之后有𝑚行，每行三个数𝑢,𝑣,𝑐，表示一条从𝐴𝑢连向𝐵𝑣的容量为𝑐的网线（可能会有重边）。最后𝑄行，每行两个整数𝑡,𝑐，表示将𝐴𝑡到𝐴𝑡+1的网线的容量上限调整至𝑐， 代表每次操作",
      "输出描述：": "第一行，输出一个整数，表示初始状态时从𝐴1到𝐵𝑛的最大流量。接下来𝑄行，每行一个整数，表示每次修改后从𝐴1到𝐵𝑛的最大流量。"
    },
    "PositiveTags": "图论,网络流",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 262144K，其他语言524288K",
    "Input": "3 1 2\n1 4 \n2 8\n2 2 5\n1 10\n2 100",
    "Output": "1\n5\n5"
  },
  "94": {
    "questionNum": "NC20905",
    "questionTitle": "饥饿\n            ",
    "difficulty": "249",
    "content": {
      "题目描述：": "夕阳西下，匆匆忙忙间，SSJ一天的课程已经全部上完了，肚子咕咕开始叫了，坐上回家的公交车，可是SSJ今天好像有点迷，据说今中午吃饭时没去食堂，走着走着，外边景色好美啊，啊？我好像没走过这，完了，我好想迷路了。 公交车到了终点站，SSJ下车了，内心无比紧张，回不去了，一阵冷风吹过，瑟瑟发抖，emm...，那是一张地图？地图上有啥大家都明白，SSJ现在已经饿得无力思考了，请你帮他设计一条最快回家的路下，他要快点回家吃xxx。",
      "输入描述：": "第一行四个数n，m,s,t。(分别表示有地图上n个地点，m条道路，SSJ在s处，他家在t处)第2-m+1三个正整数，f，u(某条路起点)，v(到达点)，w(路径距离)。(f为1或0,0表示这条道路上有恶狗拦路，SSJ已无力与恶狗打斗了，所以他要避开这些道路，1表示此条道路无危险)。",
      "输出描述：": "第一行一个数表示最短路径长度，若无法回家输出“My gold!!!”(无引号)若可以回家."
    },
    "PositiveTags": "图论,最短路",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 32768K，其他语言65536K",
    "Input": "5 7 1 5\n0 1 4 4\n1 1 3 2\n1 1 5 7\n1 2 5 10\n0 2 3 1\n1 3 5 2\n1 4 3 7",
    "Output": "4"
  },
  "95": {
    "questionNum": "NC20906",
    "questionTitle": "SSJ的梦境\n            ",
    "difficulty": "17",
    "content": {
      "题目描述：": "JSS和漂亮的QSW是来自世界不同地区的网友。（JSS是来自菲律宾的长人，漂亮的QSW是来自印度的长人，JSS很白，QSW也很白）某一天，JSS和QSW都要从自己所在的地区出发，去往自己的目的地（两人的目的地都可能不在两人当前所在的国家），但两人的目的地不同。两个常年不见的亲密网友十分想在旅途中与对方碰面，但他们又想有小小的惊喜和希望，所以他们一起规划了旅行的路线。 包含两人的出发点在内，他们一起在地图上圈出了n个点，n个点两两可能在同一个国家也可能在不同国家。由于在贺可其老师口中，印度和菲律宾都比较不靠谱，而两个国家又十分的好面子，所以地图上国家之内的航线是单向的，而国家与国家之间的航线是双向的。但是JSS和QSW都十分怕麻烦，所以在地图上把所有m条路线画成了单向的（但并不影响国家与国家之间互相到达，并且保证国家与国家之间的航线数是国家数-1）。JSS和QSW一定能从开始时两人所在地区所处的国家出发并且如果JSS和QSW进行的是跨国旅行，他们会在国家和国家之间会选择走最短的路线。 JSS和QSW十分想知道他俩能否在旅途中相遇，所以他们把这个问题丢给了Fyy...QAQ Fyy同样困惑，因为JSS和QSW给出的可能的出发点和终点太多了，他小小的脑子思考不过来，所以他找到了会编程的你 ：） 。Fyy会给你t组询问，每组询问给你JSS和QSW的起点a、c和终点b、d，并询问你两人能否相遇。",
      "输入描述：": "输入文件第一行为三个整数n，m，t分别表示n个地区和m条有向边以及t组询问。接下来m行，每行有两个整数x和y，表示从x到y有一条有向边。接下来t行，每行有四个整数a，b，c，d，分别表示rjx的起点和终点以及smy的起点和终点。",
      "输出描述：": "输出文件共有t行，每行包含一个字符“Y”或“N”，分别表示该次询问中JSS和QSW能或不能相遇。"
    },
    "PositiveTags": "最近公共祖先（LCA）,图论",
    "TimeLimit": "C/C++ 2秒，其他语言4秒",
    "SpaceLimit": "C/C++ 32768K，其他语言65536K",
    "Input": "9 11 3\n2 1\n1 3\n3 2\n4 2\n7 3\n4 5\n5 6\n6 4\n8 7\n7 9\n9 8\n5 7 8 1\n4 2 7 1\n6 8 9 2",
    "Output": "Y\nY\nY"
  },
  "96": {
    "questionNum": "NC20907",
    "questionTitle": "方格跳跃\n            ",
    "difficulty": "57",
    "content": {
      "题目描述：": "给定一个网格图，每个格子上都有一个数，初始在编号为 L 的格子上，下一次需要走到格子上的数为 (x+d) 的格子上，代价为两个格子之间的曼哈顿距离（坐标为(xi,yi)与坐标为(x_j,y_j)的两个点之间的曼哈顿距离为(|xi-xj|+|yi-yj|)）。 问要走到格子上的数为 R 的格子至少需要花费多少代价。 多组测试数据。",
      "输入描述：": "第一行三个整数 H,W,d，表示网格图的长度与宽度，d 的含义如题面所示。接下来 W 行，每行 H 个整数表示网格图中每个格子的数。下一行是一个整数 Q(1≤ Q≤105)，表示询问组数。接下来 Q 行，每行两个整数 L 和 R 代表一组询问。保证数据合法，即不存在无法从 L 按题意跳若干步跳到 R 的数据。",
      "输出描述：": "输出包含 Q 行，每行为一个整数 k，表示每一组测试数据需要花费的代价。输出应该按照输入的顺序。"
    },
    "PositiveTags": "枚举,前缀和",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 32768K，其他语言65536K",
    "Input": "3 3 2\n1 4 3\n2 5 7\n8 9 6\n1\n4 8",
    "Output": "5"
  },
  "97": {
    "questionNum": "NC20908",
    "questionTitle": "金币\n            ",
    "difficulty": "63",
    "content": {
      "题目描述：": "给定一个森林，森林中的每棵树上的每个点都有一枚金币。悲惨的是，每个点最多只能容纳一枚金币。如果一个点有偶数枚金币，所有的金币都会消失。如果一个点有奇数枚金币，则只会留下一枚金币。 由于重力作用，每秒钟所有点上的金币都会向下移动 1 个单位（即到它的父亲节点处）。假设您目前在树根的位置观看金币下落，请问您最后能在每棵树的树根处捡到最多的金币，捡到的金币枚数是多少？",
      "输入描述：": "第一行一个整数 n(2≤n≤106)。表示森林中的点的个数。第二行包含一个由 n 个数组成的序列（每个数保证在 0 到 n 之间）。序列中的第 i 个数表示第 i 个点的父亲。特别地，当数列中的一个数 pi=0时，则说明它是森林中某一棵树的根。",
      "输出描述：": "一行若干个整数，表示在每棵树的树根处能捡到的金币枚数（请按输入顺序输出每一个树根的答案，即若有很多棵树，请按输入的顺序依次输出每一个树根的答案）。"
    },
    "PositiveTags": "深度优先搜索(DFS),搜索",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 32768K，其他语言65536K",
    "Input": "18\n0 1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4",
    "Output": "4"
  },
  "98": {
    "questionNum": "NC20909",
    "questionTitle": "游戏\n            ",
    "difficulty": "54",
    "content": {
      "题目描述：": "有 n 个人围成一个环玩传球游戏，每轮游戏手里拿着球的那个人必须将球传给他（她）的一个朋友。游戏一共进行了 m 轮，初始球在第 a 个人手中，问游戏结束后球在第 b 个人手中的方案数。 多组测试数据。答案对 109+7 取模。",
      "输入描述：": "第一行三个整数 Q,n,m(1≤ Q≤105,n≤200,m≤109)，含义如题目所示。接下来 n 行，每行 n 个整数表示每个人的朋友关系，若第 i 行的第 j 个数为 0 表示 i 与 j 不是朋友，反之亦然。请特别注意本题中朋友关系是有向的。特别地，一个人不能为自己的朋友。接下来 Q 行，每行两个整数 a,b 分别表示一组询问。",
      "输出描述：": "输出共 Q 行，每行一个整数，表示答案。"
    },
    "PositiveTags": "数学,博弈论",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 32768K，其他语言65536K",
    "Input": "1 2 1\n0 1\n1 0\n1 1",
    "Output": "0"
  },
  "99": {
    "questionNum": "NC20910",
    "questionTitle": "营救\n            ",
    "difficulty": "15",
    "content": {
      "题目描述：": "YYF在建立起一个完善的情报网络之后。收到了来自上级的指示。他需要潜入敌方的监狱中去营救被俘虏的RMY。 已知在YYF潜入监狱的路径上是一条直线并且有一些点，YYF只能在这些点上行走，每一个点都有一个影响值，只有当两个点的影响值加起来不大于两个点之间的距离时，YYF才能在这两个点之间跳跃。由于YYF和RMY是一对冤家，所以他不想RMY提早被救出来，但是他又不能在这里干坐着，因为陈独秀会打他。所以你需要求出YYF在去监狱的路径上最多能够经过几个点。每个点只能经过一次，已知在最开始的时候YYF可以随机选择一个点作为起点。",
      "输入描述：": "第一行一个数N(N≤106)，表示有N个点。第二行有N个整数，第i个整数xi (xi≤107)个表示第i个点的坐标之后的一行N个整数ai (ai≤100000)，表示每一个点的影响值。",
      "输出描述：": "只有一行，包含一个整数，表示最多能够经过的点的数量。"
    },
    "PositiveTags": "贪心",
    "TimeLimit": "C/C++ 1秒，其他语言2秒",
    "SpaceLimit": "C/C++ 32768K，其他语言65536K",
    "Input": "5\n1 5 7 8 12\n2 1 5 2 3",
    "Output": "3"
  },
  "100": {
    "questionNum": "NC20943",
    "questionTitle": "歌词本\n            ",
    "difficulty": "26",
    "content": {
      "题目描述：": "众所周知，Miku家里有一本歌词本，今天她要从这本歌词本中选择几个单词构成一首新曲，然而这本歌词本又太厚了，她不想自己查找某个词是不是在歌词本里，并且她想找的歌词也不一定在歌词本里，这是她所不愿看到的，但是这又无法避免。 Miku一边阅读着歌词本，一边向你询问，问你她读过的歌词中有没有出现过她给出的单词，并且她还会随时选出一些不满意的歌词删掉。要注意同一个歌词可能会重复出现多次。 Miku还想随时查询这个歌词本里面有什么，以便印刷成词典。你的程序也要处理这种询问。",
      "输入描述：": "输入的每一行包含一个操作和至多一个字符串。若操作为1，则表示Miku念出了一句歌词，你需要将这句歌词插入到歌词本里。若操作为2，则表示Miku不满意这句歌词，要求你从歌词本里删除这句歌词。若操作为3，则表示Miku想将歌词本按字典序输出，以便印刷成词典。若操作为4，则表示Miku选出了一句歌词，询问你它是否在歌词本里出现过。输入以EOF（文件结束符，即您需要读取到输入文件末尾）结束。操作1、2、4均包含一个参数，为一个字符串，表示操作所需的字符串。请结合样例以便更好的理解题意。",
      "输出描述：": "输出的每一行表示操作的结果，我们规定：1. 对于所有将歌词添加到歌词本中的操作，不需要输出任何内容；2. 对于所有删除操作，若成功删除，则输出「String \"%s\" has been deleted once.」，若歌词不存在，则输出「Baka Miku, string \"%s\" doesn't exsit.」，输出中「%s」表示被删除的歌词；3. 对于所有按字典序输出歌词本的操作，请参考样例格式进行输出；4. 对于所有查询操作，若查询的歌词存在，则输出「String \"%s\" is exsit, there is (are) %d in the book.」，否则输出「String \"%s\" doesn't exsit.」，输出中「%s」表示给定的歌词，「%d」表示给定歌词的出现次数。"
    },
    "PositiveTags": "字符串,模拟",
    "TimeLimit": "C/C++ 3秒，其他语言6秒",
    "SpaceLimit": "C/C++ 524288K，其他语言1048576K",
    "Input": "1 a\n1 a\n3\n4 a\n2 a\n2 c\n4 a\n4 c",
    "Output": "----------\nMiku's Lyrics Book:\na\na\n----------\nString \"a\" is exsit, there is (are) 2 in the book.\nString \"a\" has been deleted once.\nBaka Miku, string \"c\" doesn't exsit.\nString \"a\" is exsit, there is (are) 1 in the book.\nString \"c\" doesn't exsit."
  }
}
